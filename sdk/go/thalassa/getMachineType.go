// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Get an machine type
func GetMachineType(ctx *pulumi.Context, args *GetMachineTypeArgs, opts ...pulumi.InvokeOption) (*GetMachineTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMachineTypeResult
	err := ctx.Invoke("thalassa:index/getMachineType:getMachineType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMachineType.
type GetMachineTypeArgs struct {
	OrganisationId *string `pulumi:"organisationId"`
	Slug           *string `pulumi:"slug"`
}

// A collection of values returned by getMachineType.
type GetMachineTypeResult struct {
	CpuCores    int    `pulumi:"cpuCores"`
	Description string `pulumi:"description"`
	// The ID of this resource.
	Id             string  `pulumi:"id"`
	Name           string  `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	RamMb          int     `pulumi:"ramMb"`
	Slug           *string `pulumi:"slug"`
}

func GetMachineTypeOutput(ctx *pulumi.Context, args GetMachineTypeOutputArgs, opts ...pulumi.InvokeOption) GetMachineTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMachineTypeResultOutput, error) {
			args := v.(GetMachineTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getMachineType:getMachineType", args, GetMachineTypeResultOutput{}, options).(GetMachineTypeResultOutput), nil
		}).(GetMachineTypeResultOutput)
}

// A collection of arguments for invoking getMachineType.
type GetMachineTypeOutputArgs struct {
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
	Slug           pulumi.StringPtrInput `pulumi:"slug"`
}

func (GetMachineTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineTypeArgs)(nil)).Elem()
}

// A collection of values returned by getMachineType.
type GetMachineTypeResultOutput struct{ *pulumi.OutputState }

func (GetMachineTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineTypeResult)(nil)).Elem()
}

func (o GetMachineTypeResultOutput) ToGetMachineTypeResultOutput() GetMachineTypeResultOutput {
	return o
}

func (o GetMachineTypeResultOutput) ToGetMachineTypeResultOutputWithContext(ctx context.Context) GetMachineTypeResultOutput {
	return o
}

func (o GetMachineTypeResultOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineTypeResult) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetMachineTypeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineTypeResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetMachineTypeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineTypeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMachineTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMachineTypeResultOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineTypeResult) *string { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

func (o GetMachineTypeResultOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineTypeResult) int { return v.RamMb }).(pulumi.IntOutput)
}

func (o GetMachineTypeResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMachineTypeResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMachineTypeResultOutput{})
}
