// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Get an Kubernetes cluster
func LookupKubernetesCluster(ctx *pulumi.Context, args *LookupKubernetesClusterArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKubernetesClusterResult
	err := ctx.Invoke("thalassa:index/getKubernetesCluster:getKubernetesCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesCluster.
type LookupKubernetesClusterArgs struct {
	// The name of the Kubernetes version.
	Name string `pulumi:"name"`
	// Organisation of the Kubernetes Cluster
	OrganisationId string `pulumi:"organisationId"`
}

// A collection of values returned by getKubernetesCluster.
type LookupKubernetesClusterResult struct {
	// Annotations for the Kubernetes Cluster
	Annotations map[string]string `pulumi:"annotations"`
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls []GetKubernetesClusterApiServerAcl `pulumi:"apiServerAcls"`
	// Audit log profile of the Kubernetes Cluster
	AuditLogProfile string `pulumi:"auditLogProfile"`
	// Auto upgrade policy of the Kubernetes Cluster
	AutoUpgradePolicy string `pulumi:"autoUpgradePolicy"`
	// Cluster type of the Kubernetes Cluster
	ClusterType string `pulumi:"clusterType"`
	// Cluster version of the Kubernetes Cluster
	ClusterVersion string `pulumi:"clusterVersion"`
	// Default network policy of the Kubernetes Cluster
	DefaultNetworkPolicy string `pulumi:"defaultNetworkPolicy"`
	// Delete protection of the Kubernetes Cluster
	DeleteProtection bool `pulumi:"deleteProtection"`
	// A human readable description about the Kubernetes Cluster
	Description string `pulumi:"description"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Kubernetes API server CA certificate of the Kubernetes Cluster
	KubernetesApiServerCaCertificate string `pulumi:"kubernetesApiServerCaCertificate"`
	// Kubernetes API server endpoint of the Kubernetes Cluster
	KubernetesApiServerEndpoint string `pulumi:"kubernetesApiServerEndpoint"`
	// Labels for the Kubernetes Cluster
	Labels map[string]string `pulumi:"labels"`
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay int `pulumi:"maintenanceDay"`
	// Time of day when the cluster will be upgraded in minutes from midnight
	MaintenanceStartAt int `pulumi:"maintenanceStartAt"`
	// The name of the Kubernetes version.
	Name string `pulumi:"name"`
	// CNI of the Kubernetes Cluster
	NetworkingCni string `pulumi:"networkingCni"`
	// Pod CIDR of the Kubernetes Cluster
	NetworkingPodCidr string `pulumi:"networkingPodCidr"`
	// Service CIDR of the Kubernetes Cluster
	NetworkingServiceCidr string `pulumi:"networkingServiceCidr"`
	// Organisation of the Kubernetes Cluster
	OrganisationId string `pulumi:"organisationId"`
	// Pod security standards profile of the Kubernetes Cluster
	PodSecurityStandardsProfile string `pulumi:"podSecurityStandardsProfile"`
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region string `pulumi:"region"`
	// The slug of the Kubernetes version.
	Slug string `pulumi:"slug"`
	// Subnet of the Kubernetes Cluster.
	SubnetId string `pulumi:"subnetId"`
	// VPC of the Kubernetes Cluster.
	VpcId string `pulumi:"vpcId"`
}

func LookupKubernetesClusterOutput(ctx *pulumi.Context, args LookupKubernetesClusterOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKubernetesClusterResultOutput, error) {
			args := v.(LookupKubernetesClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getKubernetesCluster:getKubernetesCluster", args, LookupKubernetesClusterResultOutput{}, options).(LookupKubernetesClusterResultOutput), nil
		}).(LookupKubernetesClusterResultOutput)
}

// A collection of arguments for invoking getKubernetesCluster.
type LookupKubernetesClusterOutputArgs struct {
	// The name of the Kubernetes version.
	Name pulumi.StringInput `pulumi:"name"`
	// Organisation of the Kubernetes Cluster
	OrganisationId pulumi.StringInput `pulumi:"organisationId"`
}

func (LookupKubernetesClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesCluster.
type LookupKubernetesClusterResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterResult)(nil)).Elem()
}

func (o LookupKubernetesClusterResultOutput) ToLookupKubernetesClusterResultOutput() LookupKubernetesClusterResultOutput {
	return o
}

func (o LookupKubernetesClusterResultOutput) ToLookupKubernetesClusterResultOutputWithContext(ctx context.Context) LookupKubernetesClusterResultOutput {
	return o
}

// Annotations for the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// API server ACLs for the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) ApiServerAcls() GetKubernetesClusterApiServerAclArrayOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) []GetKubernetesClusterApiServerAcl { return v.ApiServerAcls }).(GetKubernetesClusterApiServerAclArrayOutput)
}

// Audit log profile of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) AuditLogProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.AuditLogProfile }).(pulumi.StringOutput)
}

// Auto upgrade policy of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) AutoUpgradePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.AutoUpgradePolicy }).(pulumi.StringOutput)
}

// Cluster type of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Cluster version of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Default network policy of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) DefaultNetworkPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.DefaultNetworkPolicy }).(pulumi.StringOutput)
}

// Delete protection of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) DeleteProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) bool { return v.DeleteProtection }).(pulumi.BoolOutput)
}

// A human readable description about the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupKubernetesClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kubernetes API server CA certificate of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) KubernetesApiServerCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.KubernetesApiServerCaCertificate }).(pulumi.StringOutput)
}

// Kubernetes API server endpoint of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) KubernetesApiServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.KubernetesApiServerEndpoint }).(pulumi.StringOutput)
}

// Labels for the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
func (o LookupKubernetesClusterResultOutput) MaintenanceDay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) int { return v.MaintenanceDay }).(pulumi.IntOutput)
}

// Time of day when the cluster will be upgraded in minutes from midnight
func (o LookupKubernetesClusterResultOutput) MaintenanceStartAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) int { return v.MaintenanceStartAt }).(pulumi.IntOutput)
}

// The name of the Kubernetes version.
func (o LookupKubernetesClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// CNI of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) NetworkingCni() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.NetworkingCni }).(pulumi.StringOutput)
}

// Pod CIDR of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) NetworkingPodCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.NetworkingPodCidr }).(pulumi.StringOutput)
}

// Service CIDR of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) NetworkingServiceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.NetworkingServiceCidr }).(pulumi.StringOutput)
}

// Organisation of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.OrganisationId }).(pulumi.StringOutput)
}

// Pod security standards profile of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) PodSecurityStandardsProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.PodSecurityStandardsProfile }).(pulumi.StringOutput)
}

// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
func (o LookupKubernetesClusterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Region }).(pulumi.StringOutput)
}

// The slug of the Kubernetes version.
func (o LookupKubernetesClusterResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Slug }).(pulumi.StringOutput)
}

// Subnet of the Kubernetes Cluster.
func (o LookupKubernetesClusterResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// VPC of the Kubernetes Cluster.
func (o LookupKubernetesClusterResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesClusterResultOutput{})
}
