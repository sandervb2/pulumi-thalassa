// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Get an region
func GetRegion(ctx *pulumi.Context, args *GetRegionArgs, opts ...pulumi.InvokeOption) (*GetRegionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionResult
	err := ctx.Invoke("thalassa:index/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type GetRegionArgs struct {
	OrganisationId *string `pulumi:"organisationId"`
	Slug           *string `pulumi:"slug"`
}

// A collection of values returned by getRegion.
type GetRegionResult struct {
	Annotations map[string]string `pulumi:"annotations"`
	Description string            `pulumi:"description"`
	// The ID of this resource.
	Id             string            `pulumi:"id"`
	Labels         map[string]string `pulumi:"labels"`
	Name           string            `pulumi:"name"`
	OrganisationId string            `pulumi:"organisationId"`
	Slug           *string           `pulumi:"slug"`
}

func GetRegionOutput(ctx *pulumi.Context, args GetRegionOutputArgs, opts ...pulumi.InvokeOption) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionResultOutput, error) {
			args := v.(GetRegionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getRegion:getRegion", args, GetRegionResultOutput{}, options).(GetRegionResultOutput), nil
		}).(GetRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type GetRegionOutputArgs struct {
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
	Slug           pulumi.StringPtrInput `pulumi:"slug"`
}

func (GetRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRegionResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o GetRegionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRegionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetRegionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.OrganisationId }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionResultOutput{})
}
