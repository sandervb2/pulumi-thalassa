// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "thalassa:index/blockVolume:BlockVolume":
		r = &BlockVolume{}
	case "thalassa:index/blockVolumeAttachment:BlockVolumeAttachment":
		r = &BlockVolumeAttachment{}
	case "thalassa:index/cloudInitTemplate:CloudInitTemplate":
		r = &CloudInitTemplate{}
	case "thalassa:index/dbaasDbBackupschedule:DbaasDbBackupschedule":
		r = &DbaasDbBackupschedule{}
	case "thalassa:index/dbaasDbCluster:DbaasDbCluster":
		r = &DbaasDbCluster{}
	case "thalassa:index/dbaasPgDatabase:DbaasPgDatabase":
		r = &DbaasPgDatabase{}
	case "thalassa:index/dbaasPgRoles:DbaasPgRoles":
		r = &DbaasPgRoles{}
	case "thalassa:index/iamRole:IamRole":
		r = &IamRole{}
	case "thalassa:index/iamTeam:IamTeam":
		r = &IamTeam{}
	case "thalassa:index/kubernetesCluster:KubernetesCluster":
		r = &KubernetesCluster{}
	case "thalassa:index/kubernetesNodePool:KubernetesNodePool":
		r = &KubernetesNodePool{}
	case "thalassa:index/loadbalancer:Loadbalancer":
		r = &Loadbalancer{}
	case "thalassa:index/loadbalancerListener:LoadbalancerListener":
		r = &LoadbalancerListener{}
	case "thalassa:index/natgateway:Natgateway":
		r = &Natgateway{}
	case "thalassa:index/objectstorageBucket:ObjectstorageBucket":
		r = &ObjectstorageBucket{}
	case "thalassa:index/routeTable:RouteTable":
		r = &RouteTable{}
	case "thalassa:index/routeTableRoute:RouteTableRoute":
		r = &RouteTableRoute{}
	case "thalassa:index/securityGroup:SecurityGroup":
		r = &SecurityGroup{}
	case "thalassa:index/subnet:Subnet":
		r = &Subnet{}
	case "thalassa:index/targetGroup:TargetGroup":
		r = &TargetGroup{}
	case "thalassa:index/targetGroupAttachment:TargetGroupAttachment":
		r = &TargetGroupAttachment{}
	case "thalassa:index/virtualMachineInstance:VirtualMachineInstance":
		r = &VirtualMachineInstance{}
	case "thalassa:index/vpc:Vpc":
		r = &Vpc{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:thalassa" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/blockVolume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/blockVolumeAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/cloudInitTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/dbaasDbBackupschedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/dbaasDbCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/dbaasPgDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/dbaasPgRoles",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/iamRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/iamTeam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/kubernetesCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/kubernetesNodePool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/loadbalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/loadbalancerListener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/natgateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/objectstorageBucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/routeTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/routeTableRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/securityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/subnet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/targetGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/targetGroupAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/virtualMachineInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"thalassa",
		"index/vpc",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"thalassa",
		&pkg{version},
	)
}
