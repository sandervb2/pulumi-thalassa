// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Create an Kubernetes Node Pool for a Kubernetes Cluster. This resource is only available for managed Kubernetes Clusters. A Node Pool is a group of nodes that are identically configured and are automatically joined to the Kubernetes Cluster. Node Pools can be scaled up and down as needed.
type KubernetesNodePool struct {
	pulumi.CustomResourceState

	// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Availability zone for the Kubernetes Node Pool
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Kubernetes Cluster of the Kubernetes Node Pool
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// A human readable description about the Kubernetes Node Pool
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enable autohealing for the Kubernetes Node Pool
	EnableAutohealing pulumi.BoolPtrOutput `pulumi:"enableAutohealing"`
	// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
	KubernetesVersion pulumi.StringPtrOutput `pulumi:"kubernetesVersion"`
	// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Machine type for the Kubernetes Node Pool
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MaxReplicas pulumi.IntPtrOutput `pulumi:"maxReplicas"`
	// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MinReplicas pulumi.IntPtrOutput `pulumi:"minReplicas"`
	// Name of the Kubernetes Node Pool
	Name pulumi.StringOutput `pulumi:"name"`
	// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
	NodeAnnotations pulumi.StringMapOutput `pulumi:"nodeAnnotations"`
	// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
	NodeLabels pulumi.StringMapOutput `pulumi:"nodeLabels"`
	// Taints for the Kubernetes Node Pool
	NodeTaints     KubernetesNodePoolNodeTaintArrayOutput `pulumi:"nodeTaints"`
	OrganisationId pulumi.StringPtrOutput                 `pulumi:"organisationId"`
	// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
	Replicas pulumi.IntPtrOutput `pulumi:"replicas"`
	// List identities of security group that will be attached to the machines in the Node Pool
	SecurityGroupAttachments pulumi.StringArrayOutput `pulumi:"securityGroupAttachments"`
	// Slug of the Kubernetes Node Pool
	Slug pulumi.StringOutput `pulumi:"slug"`
	// Status of the Kubernetes Node Pool
	Status pulumi.StringOutput `pulumi:"status"`
	// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// Upgrade strategy for the Kubernetes Node Pool
	UpgradeStrategy pulumi.StringPtrOutput `pulumi:"upgradeStrategy"`
}

// NewKubernetesNodePool registers a new resource with the given unique name, arguments, and options.
func NewKubernetesNodePool(ctx *pulumi.Context,
	name string, args *KubernetesNodePoolArgs, opts ...pulumi.ResourceOption) (*KubernetesNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.MachineType == nil {
		return nil, errors.New("invalid value for required argument 'MachineType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesNodePool
	err := ctx.RegisterResource("thalassa:index/kubernetesNodePool:KubernetesNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesNodePool gets an existing KubernetesNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesNodePoolState, opts ...pulumi.ResourceOption) (*KubernetesNodePool, error) {
	var resource KubernetesNodePool
	err := ctx.ReadResource("thalassa:index/kubernetesNodePool:KubernetesNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesNodePool resources.
type kubernetesNodePoolState struct {
	// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
	Annotations map[string]string `pulumi:"annotations"`
	// Availability zone for the Kubernetes Node Pool
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Kubernetes Cluster of the Kubernetes Node Pool
	ClusterId *string `pulumi:"clusterId"`
	// A human readable description about the Kubernetes Node Pool
	Description *string `pulumi:"description"`
	// Enable autohealing for the Kubernetes Node Pool
	EnableAutohealing *bool `pulumi:"enableAutohealing"`
	// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
	Labels map[string]string `pulumi:"labels"`
	// Machine type for the Kubernetes Node Pool
	MachineType *string `pulumi:"machineType"`
	// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MinReplicas *int `pulumi:"minReplicas"`
	// Name of the Kubernetes Node Pool
	Name *string `pulumi:"name"`
	// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
	NodeAnnotations map[string]string `pulumi:"nodeAnnotations"`
	// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints for the Kubernetes Node Pool
	NodeTaints     []KubernetesNodePoolNodeTaint `pulumi:"nodeTaints"`
	OrganisationId *string                       `pulumi:"organisationId"`
	// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
	Replicas *int `pulumi:"replicas"`
	// List identities of security group that will be attached to the machines in the Node Pool
	SecurityGroupAttachments []string `pulumi:"securityGroupAttachments"`
	// Slug of the Kubernetes Node Pool
	Slug *string `pulumi:"slug"`
	// Status of the Kubernetes Node Pool
	Status *string `pulumi:"status"`
	// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
	SubnetId *string `pulumi:"subnetId"`
	// Upgrade strategy for the Kubernetes Node Pool
	UpgradeStrategy *string `pulumi:"upgradeStrategy"`
}

type KubernetesNodePoolState struct {
	// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
	Annotations pulumi.StringMapInput
	// Availability zone for the Kubernetes Node Pool
	AvailabilityZone pulumi.StringPtrInput
	// Kubernetes Cluster of the Kubernetes Node Pool
	ClusterId pulumi.StringPtrInput
	// A human readable description about the Kubernetes Node Pool
	Description pulumi.StringPtrInput
	// Enable autohealing for the Kubernetes Node Pool
	EnableAutohealing pulumi.BoolPtrInput
	// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
	KubernetesVersion pulumi.StringPtrInput
	// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
	Labels pulumi.StringMapInput
	// Machine type for the Kubernetes Node Pool
	MachineType pulumi.StringPtrInput
	// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MaxReplicas pulumi.IntPtrInput
	// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MinReplicas pulumi.IntPtrInput
	// Name of the Kubernetes Node Pool
	Name pulumi.StringPtrInput
	// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
	NodeAnnotations pulumi.StringMapInput
	// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
	NodeLabels pulumi.StringMapInput
	// Taints for the Kubernetes Node Pool
	NodeTaints     KubernetesNodePoolNodeTaintArrayInput
	OrganisationId pulumi.StringPtrInput
	// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
	Replicas pulumi.IntPtrInput
	// List identities of security group that will be attached to the machines in the Node Pool
	SecurityGroupAttachments pulumi.StringArrayInput
	// Slug of the Kubernetes Node Pool
	Slug pulumi.StringPtrInput
	// Status of the Kubernetes Node Pool
	Status pulumi.StringPtrInput
	// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
	SubnetId pulumi.StringPtrInput
	// Upgrade strategy for the Kubernetes Node Pool
	UpgradeStrategy pulumi.StringPtrInput
}

func (KubernetesNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesNodePoolState)(nil)).Elem()
}

type kubernetesNodePoolArgs struct {
	// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
	Annotations map[string]string `pulumi:"annotations"`
	// Availability zone for the Kubernetes Node Pool
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Kubernetes Cluster of the Kubernetes Node Pool
	ClusterId string `pulumi:"clusterId"`
	// A human readable description about the Kubernetes Node Pool
	Description *string `pulumi:"description"`
	// Enable autohealing for the Kubernetes Node Pool
	EnableAutohealing *bool `pulumi:"enableAutohealing"`
	// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
	Labels map[string]string `pulumi:"labels"`
	// Machine type for the Kubernetes Node Pool
	MachineType string `pulumi:"machineType"`
	// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MinReplicas *int `pulumi:"minReplicas"`
	// Name of the Kubernetes Node Pool
	Name *string `pulumi:"name"`
	// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
	NodeAnnotations map[string]string `pulumi:"nodeAnnotations"`
	// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Taints for the Kubernetes Node Pool
	NodeTaints     []KubernetesNodePoolNodeTaint `pulumi:"nodeTaints"`
	OrganisationId *string                       `pulumi:"organisationId"`
	// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
	Replicas *int `pulumi:"replicas"`
	// List identities of security group that will be attached to the machines in the Node Pool
	SecurityGroupAttachments []string `pulumi:"securityGroupAttachments"`
	// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
	SubnetId *string `pulumi:"subnetId"`
	// Upgrade strategy for the Kubernetes Node Pool
	UpgradeStrategy *string `pulumi:"upgradeStrategy"`
}

// The set of arguments for constructing a KubernetesNodePool resource.
type KubernetesNodePoolArgs struct {
	// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
	Annotations pulumi.StringMapInput
	// Availability zone for the Kubernetes Node Pool
	AvailabilityZone pulumi.StringInput
	// Kubernetes Cluster of the Kubernetes Node Pool
	ClusterId pulumi.StringInput
	// A human readable description about the Kubernetes Node Pool
	Description pulumi.StringPtrInput
	// Enable autohealing for the Kubernetes Node Pool
	EnableAutohealing pulumi.BoolPtrInput
	// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
	KubernetesVersion pulumi.StringPtrInput
	// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
	Labels pulumi.StringMapInput
	// Machine type for the Kubernetes Node Pool
	MachineType pulumi.StringInput
	// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MaxReplicas pulumi.IntPtrInput
	// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
	MinReplicas pulumi.IntPtrInput
	// Name of the Kubernetes Node Pool
	Name pulumi.StringPtrInput
	// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
	NodeAnnotations pulumi.StringMapInput
	// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
	NodeLabels pulumi.StringMapInput
	// Taints for the Kubernetes Node Pool
	NodeTaints     KubernetesNodePoolNodeTaintArrayInput
	OrganisationId pulumi.StringPtrInput
	// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
	Replicas pulumi.IntPtrInput
	// List identities of security group that will be attached to the machines in the Node Pool
	SecurityGroupAttachments pulumi.StringArrayInput
	// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
	SubnetId pulumi.StringPtrInput
	// Upgrade strategy for the Kubernetes Node Pool
	UpgradeStrategy pulumi.StringPtrInput
}

func (KubernetesNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesNodePoolArgs)(nil)).Elem()
}

type KubernetesNodePoolInput interface {
	pulumi.Input

	ToKubernetesNodePoolOutput() KubernetesNodePoolOutput
	ToKubernetesNodePoolOutputWithContext(ctx context.Context) KubernetesNodePoolOutput
}

func (*KubernetesNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePool)(nil)).Elem()
}

func (i *KubernetesNodePool) ToKubernetesNodePoolOutput() KubernetesNodePoolOutput {
	return i.ToKubernetesNodePoolOutputWithContext(context.Background())
}

func (i *KubernetesNodePool) ToKubernetesNodePoolOutputWithContext(ctx context.Context) KubernetesNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolOutput)
}

// KubernetesNodePoolArrayInput is an input type that accepts KubernetesNodePoolArray and KubernetesNodePoolArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolArrayInput` via:
//
//	KubernetesNodePoolArray{ KubernetesNodePoolArgs{...} }
type KubernetesNodePoolArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolArrayOutput() KubernetesNodePoolArrayOutput
	ToKubernetesNodePoolArrayOutputWithContext(context.Context) KubernetesNodePoolArrayOutput
}

type KubernetesNodePoolArray []KubernetesNodePoolInput

func (KubernetesNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesNodePool)(nil)).Elem()
}

func (i KubernetesNodePoolArray) ToKubernetesNodePoolArrayOutput() KubernetesNodePoolArrayOutput {
	return i.ToKubernetesNodePoolArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolArray) ToKubernetesNodePoolArrayOutputWithContext(ctx context.Context) KubernetesNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolArrayOutput)
}

// KubernetesNodePoolMapInput is an input type that accepts KubernetesNodePoolMap and KubernetesNodePoolMapOutput values.
// You can construct a concrete instance of `KubernetesNodePoolMapInput` via:
//
//	KubernetesNodePoolMap{ "key": KubernetesNodePoolArgs{...} }
type KubernetesNodePoolMapInput interface {
	pulumi.Input

	ToKubernetesNodePoolMapOutput() KubernetesNodePoolMapOutput
	ToKubernetesNodePoolMapOutputWithContext(context.Context) KubernetesNodePoolMapOutput
}

type KubernetesNodePoolMap map[string]KubernetesNodePoolInput

func (KubernetesNodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesNodePool)(nil)).Elem()
}

func (i KubernetesNodePoolMap) ToKubernetesNodePoolMapOutput() KubernetesNodePoolMapOutput {
	return i.ToKubernetesNodePoolMapOutputWithContext(context.Background())
}

func (i KubernetesNodePoolMap) ToKubernetesNodePoolMapOutputWithContext(ctx context.Context) KubernetesNodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolMapOutput)
}

type KubernetesNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePool)(nil)).Elem()
}

func (o KubernetesNodePoolOutput) ToKubernetesNodePoolOutput() KubernetesNodePoolOutput {
	return o
}

func (o KubernetesNodePoolOutput) ToKubernetesNodePoolOutputWithContext(ctx context.Context) KubernetesNodePoolOutput {
	return o
}

// Annotations for the Kubernetes Node Pool. Optional. These annotations are used for additional metadata and configuration. Annotations are not applied to the Kubernetes nodes created for this Node Pool, please use nodeAnnotations instead.
func (o KubernetesNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Availability zone for the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Kubernetes Cluster of the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// A human readable description about the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable autohealing for the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) EnableAutohealing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.BoolPtrOutput { return v.EnableAutohealing }).(pulumi.BoolPtrOutput)
}

// Kubernetes version for the Kubernetes Node Pool. Optional. Will use the Kubernetes Cluster version if not set.
func (o KubernetesNodePoolOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringPtrOutput { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// Labels for the Kubernetes Node Pool. Optional. These labels are used for filtering and grouping resources in the Thalassa Console. Labels are not applied to the Kubernetes nodes created for this Node Pool, please use nodeLabels instead.
func (o KubernetesNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Machine type for the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// Maximum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
func (o KubernetesNodePoolOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.IntPtrOutput { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// Minimum number of replicas for the Kubernetes Node Pool. May only be set when enableAutoscaling is true.
func (o KubernetesNodePoolOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.IntPtrOutput { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Name of the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Annotations for the Kubernetes Nodes within this Node Pool. Optional. These annotations are applied to the Kubernetes nodes created for this Node Pool. Annotations must match the same constraints as Kubernetes annotations.
func (o KubernetesNodePoolOutput) NodeAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringMapOutput { return v.NodeAnnotations }).(pulumi.StringMapOutput)
}

// Labels for the Kubernetes Nodes within this Node Pool. Optional. These labels are applied to the Kubernetes nodes created for this Node Pool. Labels must match the same constraints as Kubernetes labels.
func (o KubernetesNodePoolOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringMapOutput { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Taints for the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) NodeTaints() KubernetesNodePoolNodeTaintArrayOutput {
	return o.ApplyT(func(v *KubernetesNodePool) KubernetesNodePoolNodeTaintArrayOutput { return v.NodeTaints }).(KubernetesNodePoolNodeTaintArrayOutput)
}

func (o KubernetesNodePoolOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringPtrOutput { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

// Number of replicas for the Kubernetes Node Pool. Do not set this when enableAutoscaling is true.
func (o KubernetesNodePoolOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.IntPtrOutput { return v.Replicas }).(pulumi.IntPtrOutput)
}

// List identities of security group that will be attached to the machines in the Node Pool
func (o KubernetesNodePoolOutput) SecurityGroupAttachments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringArrayOutput { return v.SecurityGroupAttachments }).(pulumi.StringArrayOutput)
}

// Slug of the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

// Status of the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Subnet of the Kubernetes Cluster. Required for managed Kubernetes Clusters.
func (o KubernetesNodePoolOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Upgrade strategy for the Kubernetes Node Pool
func (o KubernetesNodePoolOutput) UpgradeStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePool) pulumi.StringPtrOutput { return v.UpgradeStrategy }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesNodePool)(nil)).Elem()
}

func (o KubernetesNodePoolArrayOutput) ToKubernetesNodePoolArrayOutput() KubernetesNodePoolArrayOutput {
	return o
}

func (o KubernetesNodePoolArrayOutput) ToKubernetesNodePoolArrayOutputWithContext(ctx context.Context) KubernetesNodePoolArrayOutput {
	return o
}

func (o KubernetesNodePoolArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesNodePool {
		return vs[0].([]*KubernetesNodePool)[vs[1].(int)]
	}).(KubernetesNodePoolOutput)
}

type KubernetesNodePoolMapOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesNodePool)(nil)).Elem()
}

func (o KubernetesNodePoolMapOutput) ToKubernetesNodePoolMapOutput() KubernetesNodePoolMapOutput {
	return o
}

func (o KubernetesNodePoolMapOutput) ToKubernetesNodePoolMapOutputWithContext(ctx context.Context) KubernetesNodePoolMapOutput {
	return o
}

func (o KubernetesNodePoolMapOutput) MapIndex(k pulumi.StringInput) KubernetesNodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesNodePool {
		return vs[0].(map[string]*KubernetesNodePool)[vs[1].(string)]
	}).(KubernetesNodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolInput)(nil)).Elem(), &KubernetesNodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolArrayInput)(nil)).Elem(), KubernetesNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolMapInput)(nil)).Elem(), KubernetesNodePoolMap{})
	pulumi.RegisterOutputType(KubernetesNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolMapOutput{})
}
