// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

var _ = internal.GetEnvOrDefault

type KubernetesClusterApiServerAcl struct {
	// List of allowed CIDRs for API server access
	AllowedCidrs []string `pulumi:"allowedCidrs"`
}

// KubernetesClusterApiServerAclInput is an input type that accepts KubernetesClusterApiServerAclArgs and KubernetesClusterApiServerAclOutput values.
// You can construct a concrete instance of `KubernetesClusterApiServerAclInput` via:
//
//	KubernetesClusterApiServerAclArgs{...}
type KubernetesClusterApiServerAclInput interface {
	pulumi.Input

	ToKubernetesClusterApiServerAclOutput() KubernetesClusterApiServerAclOutput
	ToKubernetesClusterApiServerAclOutputWithContext(context.Context) KubernetesClusterApiServerAclOutput
}

type KubernetesClusterApiServerAclArgs struct {
	// List of allowed CIDRs for API server access
	AllowedCidrs pulumi.StringArrayInput `pulumi:"allowedCidrs"`
}

func (KubernetesClusterApiServerAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterApiServerAcl)(nil)).Elem()
}

func (i KubernetesClusterApiServerAclArgs) ToKubernetesClusterApiServerAclOutput() KubernetesClusterApiServerAclOutput {
	return i.ToKubernetesClusterApiServerAclOutputWithContext(context.Background())
}

func (i KubernetesClusterApiServerAclArgs) ToKubernetesClusterApiServerAclOutputWithContext(ctx context.Context) KubernetesClusterApiServerAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterApiServerAclOutput)
}

// KubernetesClusterApiServerAclArrayInput is an input type that accepts KubernetesClusterApiServerAclArray and KubernetesClusterApiServerAclArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterApiServerAclArrayInput` via:
//
//	KubernetesClusterApiServerAclArray{ KubernetesClusterApiServerAclArgs{...} }
type KubernetesClusterApiServerAclArrayInput interface {
	pulumi.Input

	ToKubernetesClusterApiServerAclArrayOutput() KubernetesClusterApiServerAclArrayOutput
	ToKubernetesClusterApiServerAclArrayOutputWithContext(context.Context) KubernetesClusterApiServerAclArrayOutput
}

type KubernetesClusterApiServerAclArray []KubernetesClusterApiServerAclInput

func (KubernetesClusterApiServerAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterApiServerAcl)(nil)).Elem()
}

func (i KubernetesClusterApiServerAclArray) ToKubernetesClusterApiServerAclArrayOutput() KubernetesClusterApiServerAclArrayOutput {
	return i.ToKubernetesClusterApiServerAclArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterApiServerAclArray) ToKubernetesClusterApiServerAclArrayOutputWithContext(ctx context.Context) KubernetesClusterApiServerAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterApiServerAclArrayOutput)
}

type KubernetesClusterApiServerAclOutput struct{ *pulumi.OutputState }

func (KubernetesClusterApiServerAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterApiServerAcl)(nil)).Elem()
}

func (o KubernetesClusterApiServerAclOutput) ToKubernetesClusterApiServerAclOutput() KubernetesClusterApiServerAclOutput {
	return o
}

func (o KubernetesClusterApiServerAclOutput) ToKubernetesClusterApiServerAclOutputWithContext(ctx context.Context) KubernetesClusterApiServerAclOutput {
	return o
}

// List of allowed CIDRs for API server access
func (o KubernetesClusterApiServerAclOutput) AllowedCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterApiServerAcl) []string { return v.AllowedCidrs }).(pulumi.StringArrayOutput)
}

type KubernetesClusterApiServerAclArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterApiServerAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterApiServerAcl)(nil)).Elem()
}

func (o KubernetesClusterApiServerAclArrayOutput) ToKubernetesClusterApiServerAclArrayOutput() KubernetesClusterApiServerAclArrayOutput {
	return o
}

func (o KubernetesClusterApiServerAclArrayOutput) ToKubernetesClusterApiServerAclArrayOutputWithContext(ctx context.Context) KubernetesClusterApiServerAclArrayOutput {
	return o
}

func (o KubernetesClusterApiServerAclArrayOutput) Index(i pulumi.IntInput) KubernetesClusterApiServerAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterApiServerAcl {
		return vs[0].([]KubernetesClusterApiServerAcl)[vs[1].(int)]
	}).(KubernetesClusterApiServerAclOutput)
}

type KubernetesNodePoolNodeTaint struct {
	// Effect of the taint
	Effect *string `pulumi:"effect"`
	// Key of the taint
	Key *string `pulumi:"key"`
	// Operator of the taint
	Operator *string `pulumi:"operator"`
	// Value of the taint. Optional.
	Value *string `pulumi:"value"`
}

// KubernetesNodePoolNodeTaintInput is an input type that accepts KubernetesNodePoolNodeTaintArgs and KubernetesNodePoolNodeTaintOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeTaintInput` via:
//
//	KubernetesNodePoolNodeTaintArgs{...}
type KubernetesNodePoolNodeTaintInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeTaintOutput() KubernetesNodePoolNodeTaintOutput
	ToKubernetesNodePoolNodeTaintOutputWithContext(context.Context) KubernetesNodePoolNodeTaintOutput
}

type KubernetesNodePoolNodeTaintArgs struct {
	// Effect of the taint
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key of the taint
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator of the taint
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Value of the taint. Optional.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KubernetesNodePoolNodeTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNodeTaint)(nil)).Elem()
}

func (i KubernetesNodePoolNodeTaintArgs) ToKubernetesNodePoolNodeTaintOutput() KubernetesNodePoolNodeTaintOutput {
	return i.ToKubernetesNodePoolNodeTaintOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeTaintArgs) ToKubernetesNodePoolNodeTaintOutputWithContext(ctx context.Context) KubernetesNodePoolNodeTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeTaintOutput)
}

// KubernetesNodePoolNodeTaintArrayInput is an input type that accepts KubernetesNodePoolNodeTaintArray and KubernetesNodePoolNodeTaintArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeTaintArrayInput` via:
//
//	KubernetesNodePoolNodeTaintArray{ KubernetesNodePoolNodeTaintArgs{...} }
type KubernetesNodePoolNodeTaintArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeTaintArrayOutput() KubernetesNodePoolNodeTaintArrayOutput
	ToKubernetesNodePoolNodeTaintArrayOutputWithContext(context.Context) KubernetesNodePoolNodeTaintArrayOutput
}

type KubernetesNodePoolNodeTaintArray []KubernetesNodePoolNodeTaintInput

func (KubernetesNodePoolNodeTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNodeTaint)(nil)).Elem()
}

func (i KubernetesNodePoolNodeTaintArray) ToKubernetesNodePoolNodeTaintArrayOutput() KubernetesNodePoolNodeTaintArrayOutput {
	return i.ToKubernetesNodePoolNodeTaintArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeTaintArray) ToKubernetesNodePoolNodeTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeTaintArrayOutput)
}

type KubernetesNodePoolNodeTaintOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNodeTaint)(nil)).Elem()
}

func (o KubernetesNodePoolNodeTaintOutput) ToKubernetesNodePoolNodeTaintOutput() KubernetesNodePoolNodeTaintOutput {
	return o
}

func (o KubernetesNodePoolNodeTaintOutput) ToKubernetesNodePoolNodeTaintOutputWithContext(ctx context.Context) KubernetesNodePoolNodeTaintOutput {
	return o
}

// Effect of the taint
func (o KubernetesNodePoolNodeTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNodeTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key of the taint
func (o KubernetesNodePoolNodeTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNodeTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator of the taint
func (o KubernetesNodePoolNodeTaintOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNodeTaint) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Value of the taint. Optional.
func (o KubernetesNodePoolNodeTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNodeTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNodeTaintArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNodeTaint)(nil)).Elem()
}

func (o KubernetesNodePoolNodeTaintArrayOutput) ToKubernetesNodePoolNodeTaintArrayOutput() KubernetesNodePoolNodeTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeTaintArrayOutput) ToKubernetesNodePoolNodeTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeTaintArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolNodeTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolNodeTaint {
		return vs[0].([]KubernetesNodePoolNodeTaint)[vs[1].(int)]
	}).(KubernetesNodePoolNodeTaintOutput)
}

type SecurityGroupEgressRule struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion string `pulumi:"ipVersion"`
	// Name of the rule
	Name string `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy string `pulumi:"policy"`
	// Maximum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMax *int `pulumi:"portRangeMax"`
	// Minimum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMin *int `pulumi:"portRangeMin"`
	// Priority of the rule. Must be greater than 0 and less than 200.
	Priority int `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol string `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress *string `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity *string `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType string `pulumi:"remoteType"`
}

// SecurityGroupEgressRuleInput is an input type that accepts SecurityGroupEgressRuleArgs and SecurityGroupEgressRuleOutput values.
// You can construct a concrete instance of `SecurityGroupEgressRuleInput` via:
//
//	SecurityGroupEgressRuleArgs{...}
type SecurityGroupEgressRuleInput interface {
	pulumi.Input

	ToSecurityGroupEgressRuleOutput() SecurityGroupEgressRuleOutput
	ToSecurityGroupEgressRuleOutputWithContext(context.Context) SecurityGroupEgressRuleOutput
}

type SecurityGroupEgressRuleArgs struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy pulumi.StringInput `pulumi:"policy"`
	// Maximum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMax pulumi.IntPtrInput `pulumi:"portRangeMax"`
	// Minimum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMin pulumi.IntPtrInput `pulumi:"portRangeMin"`
	// Priority of the rule. Must be greater than 0 and less than 200.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress pulumi.StringPtrInput `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity pulumi.StringPtrInput `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType pulumi.StringInput `pulumi:"remoteType"`
}

func (SecurityGroupEgressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressRule)(nil)).Elem()
}

func (i SecurityGroupEgressRuleArgs) ToSecurityGroupEgressRuleOutput() SecurityGroupEgressRuleOutput {
	return i.ToSecurityGroupEgressRuleOutputWithContext(context.Background())
}

func (i SecurityGroupEgressRuleArgs) ToSecurityGroupEgressRuleOutputWithContext(ctx context.Context) SecurityGroupEgressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressRuleOutput)
}

// SecurityGroupEgressRuleArrayInput is an input type that accepts SecurityGroupEgressRuleArray and SecurityGroupEgressRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupEgressRuleArrayInput` via:
//
//	SecurityGroupEgressRuleArray{ SecurityGroupEgressRuleArgs{...} }
type SecurityGroupEgressRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressRuleArrayOutput() SecurityGroupEgressRuleArrayOutput
	ToSecurityGroupEgressRuleArrayOutputWithContext(context.Context) SecurityGroupEgressRuleArrayOutput
}

type SecurityGroupEgressRuleArray []SecurityGroupEgressRuleInput

func (SecurityGroupEgressRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressRule)(nil)).Elem()
}

func (i SecurityGroupEgressRuleArray) ToSecurityGroupEgressRuleArrayOutput() SecurityGroupEgressRuleArrayOutput {
	return i.ToSecurityGroupEgressRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressRuleArray) ToSecurityGroupEgressRuleArrayOutputWithContext(ctx context.Context) SecurityGroupEgressRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressRuleArrayOutput)
}

type SecurityGroupEgressRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressRule)(nil)).Elem()
}

func (o SecurityGroupEgressRuleOutput) ToSecurityGroupEgressRuleOutput() SecurityGroupEgressRuleOutput {
	return o
}

func (o SecurityGroupEgressRuleOutput) ToSecurityGroupEgressRuleOutputWithContext(ctx context.Context) SecurityGroupEgressRuleOutput {
	return o
}

// IP version of the rule (ipv4 or ipv6)
func (o SecurityGroupEgressRuleOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Name of the rule
func (o SecurityGroupEgressRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) string { return v.Name }).(pulumi.StringOutput)
}

// Policy of the rule (allow or drop)
func (o SecurityGroupEgressRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Maximum port of the rule. Must be greater than 0 and less than 65535.
func (o SecurityGroupEgressRuleOutput) PortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) *int { return v.PortRangeMax }).(pulumi.IntPtrOutput)
}

// Minimum port of the rule. Must be greater than 0 and less than 65535.
func (o SecurityGroupEgressRuleOutput) PortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) *int { return v.PortRangeMin }).(pulumi.IntPtrOutput)
}

// Priority of the rule. Must be greater than 0 and less than 200.
func (o SecurityGroupEgressRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the rule (all, tcp, udp, icmp)
func (o SecurityGroupEgressRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// IP address or CIDR block that the rule applies to
func (o SecurityGroupEgressRuleOutput) RemoteAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) *string { return v.RemoteAddress }).(pulumi.StringPtrOutput)
}

// Identity of the security group that the rule applies to
func (o SecurityGroupEgressRuleOutput) RemoteSecurityGroupIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) *string { return v.RemoteSecurityGroupIdentity }).(pulumi.StringPtrOutput)
}

// Type of the remote address (address or securityGroup)
func (o SecurityGroupEgressRuleOutput) RemoteType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressRule) string { return v.RemoteType }).(pulumi.StringOutput)
}

type SecurityGroupEgressRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressRule)(nil)).Elem()
}

func (o SecurityGroupEgressRuleArrayOutput) ToSecurityGroupEgressRuleArrayOutput() SecurityGroupEgressRuleArrayOutput {
	return o
}

func (o SecurityGroupEgressRuleArrayOutput) ToSecurityGroupEgressRuleArrayOutputWithContext(ctx context.Context) SecurityGroupEgressRuleArrayOutput {
	return o
}

func (o SecurityGroupEgressRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgressRule {
		return vs[0].([]SecurityGroupEgressRule)[vs[1].(int)]
	}).(SecurityGroupEgressRuleOutput)
}

type SecurityGroupIngressRule struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion string `pulumi:"ipVersion"`
	// Name of the rule
	Name string `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy string `pulumi:"policy"`
	// Maximum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMax *int `pulumi:"portRangeMax"`
	// Minimum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMin *int `pulumi:"portRangeMin"`
	// Priority of the rule. Must be greater than 0 and less than 200.
	Priority int `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol string `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress *string `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity *string `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType string `pulumi:"remoteType"`
}

// SecurityGroupIngressRuleInput is an input type that accepts SecurityGroupIngressRuleArgs and SecurityGroupIngressRuleOutput values.
// You can construct a concrete instance of `SecurityGroupIngressRuleInput` via:
//
//	SecurityGroupIngressRuleArgs{...}
type SecurityGroupIngressRuleInput interface {
	pulumi.Input

	ToSecurityGroupIngressRuleOutput() SecurityGroupIngressRuleOutput
	ToSecurityGroupIngressRuleOutputWithContext(context.Context) SecurityGroupIngressRuleOutput
}

type SecurityGroupIngressRuleArgs struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy pulumi.StringInput `pulumi:"policy"`
	// Maximum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMax pulumi.IntPtrInput `pulumi:"portRangeMax"`
	// Minimum port of the rule. Must be greater than 0 and less than 65535.
	PortRangeMin pulumi.IntPtrInput `pulumi:"portRangeMin"`
	// Priority of the rule. Must be greater than 0 and less than 200.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress pulumi.StringPtrInput `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity pulumi.StringPtrInput `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType pulumi.StringInput `pulumi:"remoteType"`
}

func (SecurityGroupIngressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressRule)(nil)).Elem()
}

func (i SecurityGroupIngressRuleArgs) ToSecurityGroupIngressRuleOutput() SecurityGroupIngressRuleOutput {
	return i.ToSecurityGroupIngressRuleOutputWithContext(context.Background())
}

func (i SecurityGroupIngressRuleArgs) ToSecurityGroupIngressRuleOutputWithContext(ctx context.Context) SecurityGroupIngressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressRuleOutput)
}

// SecurityGroupIngressRuleArrayInput is an input type that accepts SecurityGroupIngressRuleArray and SecurityGroupIngressRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupIngressRuleArrayInput` via:
//
//	SecurityGroupIngressRuleArray{ SecurityGroupIngressRuleArgs{...} }
type SecurityGroupIngressRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressRuleArrayOutput() SecurityGroupIngressRuleArrayOutput
	ToSecurityGroupIngressRuleArrayOutputWithContext(context.Context) SecurityGroupIngressRuleArrayOutput
}

type SecurityGroupIngressRuleArray []SecurityGroupIngressRuleInput

func (SecurityGroupIngressRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressRule)(nil)).Elem()
}

func (i SecurityGroupIngressRuleArray) ToSecurityGroupIngressRuleArrayOutput() SecurityGroupIngressRuleArrayOutput {
	return i.ToSecurityGroupIngressRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressRuleArray) ToSecurityGroupIngressRuleArrayOutputWithContext(ctx context.Context) SecurityGroupIngressRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressRuleArrayOutput)
}

type SecurityGroupIngressRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressRule)(nil)).Elem()
}

func (o SecurityGroupIngressRuleOutput) ToSecurityGroupIngressRuleOutput() SecurityGroupIngressRuleOutput {
	return o
}

func (o SecurityGroupIngressRuleOutput) ToSecurityGroupIngressRuleOutputWithContext(ctx context.Context) SecurityGroupIngressRuleOutput {
	return o
}

// IP version of the rule (ipv4 or ipv6)
func (o SecurityGroupIngressRuleOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Name of the rule
func (o SecurityGroupIngressRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) string { return v.Name }).(pulumi.StringOutput)
}

// Policy of the rule (allow or drop)
func (o SecurityGroupIngressRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Maximum port of the rule. Must be greater than 0 and less than 65535.
func (o SecurityGroupIngressRuleOutput) PortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) *int { return v.PortRangeMax }).(pulumi.IntPtrOutput)
}

// Minimum port of the rule. Must be greater than 0 and less than 65535.
func (o SecurityGroupIngressRuleOutput) PortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) *int { return v.PortRangeMin }).(pulumi.IntPtrOutput)
}

// Priority of the rule. Must be greater than 0 and less than 200.
func (o SecurityGroupIngressRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the rule (all, tcp, udp, icmp)
func (o SecurityGroupIngressRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// IP address or CIDR block that the rule applies to
func (o SecurityGroupIngressRuleOutput) RemoteAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) *string { return v.RemoteAddress }).(pulumi.StringPtrOutput)
}

// Identity of the security group that the rule applies to
func (o SecurityGroupIngressRuleOutput) RemoteSecurityGroupIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) *string { return v.RemoteSecurityGroupIdentity }).(pulumi.StringPtrOutput)
}

// Type of the remote address (address or securityGroup)
func (o SecurityGroupIngressRuleOutput) RemoteType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressRule) string { return v.RemoteType }).(pulumi.StringOutput)
}

type SecurityGroupIngressRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressRule)(nil)).Elem()
}

func (o SecurityGroupIngressRuleArrayOutput) ToSecurityGroupIngressRuleArrayOutput() SecurityGroupIngressRuleArrayOutput {
	return o
}

func (o SecurityGroupIngressRuleArrayOutput) ToSecurityGroupIngressRuleArrayOutputWithContext(ctx context.Context) SecurityGroupIngressRuleArrayOutput {
	return o
}

func (o SecurityGroupIngressRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngressRule {
		return vs[0].([]SecurityGroupIngressRule)[vs[1].(int)]
	}).(SecurityGroupIngressRuleOutput)
}

type TargetGroupAttachmentType struct {
	// The ID of the target (e.g. instance ID)
	Id string `pulumi:"id"`
}

// TargetGroupAttachmentTypeInput is an input type that accepts TargetGroupAttachmentTypeArgs and TargetGroupAttachmentTypeOutput values.
// You can construct a concrete instance of `TargetGroupAttachmentTypeInput` via:
//
//	TargetGroupAttachmentTypeArgs{...}
type TargetGroupAttachmentTypeInput interface {
	pulumi.Input

	ToTargetGroupAttachmentTypeOutput() TargetGroupAttachmentTypeOutput
	ToTargetGroupAttachmentTypeOutputWithContext(context.Context) TargetGroupAttachmentTypeOutput
}

type TargetGroupAttachmentTypeArgs struct {
	// The ID of the target (e.g. instance ID)
	Id pulumi.StringInput `pulumi:"id"`
}

func (TargetGroupAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttachmentType)(nil)).Elem()
}

func (i TargetGroupAttachmentTypeArgs) ToTargetGroupAttachmentTypeOutput() TargetGroupAttachmentTypeOutput {
	return i.ToTargetGroupAttachmentTypeOutputWithContext(context.Background())
}

func (i TargetGroupAttachmentTypeArgs) ToTargetGroupAttachmentTypeOutputWithContext(ctx context.Context) TargetGroupAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttachmentTypeOutput)
}

// TargetGroupAttachmentTypeArrayInput is an input type that accepts TargetGroupAttachmentTypeArray and TargetGroupAttachmentTypeArrayOutput values.
// You can construct a concrete instance of `TargetGroupAttachmentTypeArrayInput` via:
//
//	TargetGroupAttachmentTypeArray{ TargetGroupAttachmentTypeArgs{...} }
type TargetGroupAttachmentTypeArrayInput interface {
	pulumi.Input

	ToTargetGroupAttachmentTypeArrayOutput() TargetGroupAttachmentTypeArrayOutput
	ToTargetGroupAttachmentTypeArrayOutputWithContext(context.Context) TargetGroupAttachmentTypeArrayOutput
}

type TargetGroupAttachmentTypeArray []TargetGroupAttachmentTypeInput

func (TargetGroupAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttachmentType)(nil)).Elem()
}

func (i TargetGroupAttachmentTypeArray) ToTargetGroupAttachmentTypeArrayOutput() TargetGroupAttachmentTypeArrayOutput {
	return i.ToTargetGroupAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i TargetGroupAttachmentTypeArray) ToTargetGroupAttachmentTypeArrayOutputWithContext(ctx context.Context) TargetGroupAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttachmentTypeArrayOutput)
}

type TargetGroupAttachmentTypeOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttachmentType)(nil)).Elem()
}

func (o TargetGroupAttachmentTypeOutput) ToTargetGroupAttachmentTypeOutput() TargetGroupAttachmentTypeOutput {
	return o
}

func (o TargetGroupAttachmentTypeOutput) ToTargetGroupAttachmentTypeOutputWithContext(ctx context.Context) TargetGroupAttachmentTypeOutput {
	return o
}

// The ID of the target (e.g. instance ID)
func (o TargetGroupAttachmentTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupAttachmentType) string { return v.Id }).(pulumi.StringOutput)
}

type TargetGroupAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttachmentType)(nil)).Elem()
}

func (o TargetGroupAttachmentTypeArrayOutput) ToTargetGroupAttachmentTypeArrayOutput() TargetGroupAttachmentTypeArrayOutput {
	return o
}

func (o TargetGroupAttachmentTypeArrayOutput) ToTargetGroupAttachmentTypeArrayOutputWithContext(ctx context.Context) TargetGroupAttachmentTypeArrayOutput {
	return o
}

func (o TargetGroupAttachmentTypeArrayOutput) Index(i pulumi.IntInput) TargetGroupAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupAttachmentType {
		return vs[0].([]TargetGroupAttachmentType)[vs[1].(int)]
	}).(TargetGroupAttachmentTypeOutput)
}

type GetKubernetesClusterApiServerAcl struct {
	// List of allowed CIDRs for API server access
	AllowedCidrs []string `pulumi:"allowedCidrs"`
}

// GetKubernetesClusterApiServerAclInput is an input type that accepts GetKubernetesClusterApiServerAclArgs and GetKubernetesClusterApiServerAclOutput values.
// You can construct a concrete instance of `GetKubernetesClusterApiServerAclInput` via:
//
//	GetKubernetesClusterApiServerAclArgs{...}
type GetKubernetesClusterApiServerAclInput interface {
	pulumi.Input

	ToGetKubernetesClusterApiServerAclOutput() GetKubernetesClusterApiServerAclOutput
	ToGetKubernetesClusterApiServerAclOutputWithContext(context.Context) GetKubernetesClusterApiServerAclOutput
}

type GetKubernetesClusterApiServerAclArgs struct {
	// List of allowed CIDRs for API server access
	AllowedCidrs pulumi.StringArrayInput `pulumi:"allowedCidrs"`
}

func (GetKubernetesClusterApiServerAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterApiServerAcl)(nil)).Elem()
}

func (i GetKubernetesClusterApiServerAclArgs) ToGetKubernetesClusterApiServerAclOutput() GetKubernetesClusterApiServerAclOutput {
	return i.ToGetKubernetesClusterApiServerAclOutputWithContext(context.Background())
}

func (i GetKubernetesClusterApiServerAclArgs) ToGetKubernetesClusterApiServerAclOutputWithContext(ctx context.Context) GetKubernetesClusterApiServerAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterApiServerAclOutput)
}

// GetKubernetesClusterApiServerAclArrayInput is an input type that accepts GetKubernetesClusterApiServerAclArray and GetKubernetesClusterApiServerAclArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterApiServerAclArrayInput` via:
//
//	GetKubernetesClusterApiServerAclArray{ GetKubernetesClusterApiServerAclArgs{...} }
type GetKubernetesClusterApiServerAclArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterApiServerAclArrayOutput() GetKubernetesClusterApiServerAclArrayOutput
	ToGetKubernetesClusterApiServerAclArrayOutputWithContext(context.Context) GetKubernetesClusterApiServerAclArrayOutput
}

type GetKubernetesClusterApiServerAclArray []GetKubernetesClusterApiServerAclInput

func (GetKubernetesClusterApiServerAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterApiServerAcl)(nil)).Elem()
}

func (i GetKubernetesClusterApiServerAclArray) ToGetKubernetesClusterApiServerAclArrayOutput() GetKubernetesClusterApiServerAclArrayOutput {
	return i.ToGetKubernetesClusterApiServerAclArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterApiServerAclArray) ToGetKubernetesClusterApiServerAclArrayOutputWithContext(ctx context.Context) GetKubernetesClusterApiServerAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterApiServerAclArrayOutput)
}

type GetKubernetesClusterApiServerAclOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterApiServerAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterApiServerAcl)(nil)).Elem()
}

func (o GetKubernetesClusterApiServerAclOutput) ToGetKubernetesClusterApiServerAclOutput() GetKubernetesClusterApiServerAclOutput {
	return o
}

func (o GetKubernetesClusterApiServerAclOutput) ToGetKubernetesClusterApiServerAclOutputWithContext(ctx context.Context) GetKubernetesClusterApiServerAclOutput {
	return o
}

// List of allowed CIDRs for API server access
func (o GetKubernetesClusterApiServerAclOutput) AllowedCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterApiServerAcl) []string { return v.AllowedCidrs }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterApiServerAclArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterApiServerAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterApiServerAcl)(nil)).Elem()
}

func (o GetKubernetesClusterApiServerAclArrayOutput) ToGetKubernetesClusterApiServerAclArrayOutput() GetKubernetesClusterApiServerAclArrayOutput {
	return o
}

func (o GetKubernetesClusterApiServerAclArrayOutput) ToGetKubernetesClusterApiServerAclArrayOutputWithContext(ctx context.Context) GetKubernetesClusterApiServerAclArrayOutput {
	return o
}

func (o GetKubernetesClusterApiServerAclArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterApiServerAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterApiServerAcl {
		return vs[0].([]GetKubernetesClusterApiServerAcl)[vs[1].(int)]
	}).(GetKubernetesClusterApiServerAclOutput)
}

type GetRegionsRegion struct {
	// The annotations of the region.
	Annotations map[string]string `pulumi:"annotations"`
	// The description of the region.
	Description string `pulumi:"description"`
	// The identity of the region.
	Id string `pulumi:"id"`
	// The labels of the region.
	Labels map[string]string `pulumi:"labels"`
	// The name of the region.
	Name string `pulumi:"name"`
	// The slug of the region.
	Slug string `pulumi:"slug"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// The annotations of the region.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// The description of the region.
	Description pulumi.StringInput `pulumi:"description"`
	// The identity of the region.
	Id pulumi.StringInput `pulumi:"id"`
	// The labels of the region.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// The slug of the region.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// The annotations of the region.
func (o GetRegionsRegionOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRegionsRegion) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The description of the region.
func (o GetRegionsRegionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Description }).(pulumi.StringOutput)
}

// The identity of the region.
func (o GetRegionsRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Id }).(pulumi.StringOutput)
}

// The labels of the region.
func (o GetRegionsRegionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRegionsRegion) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the region.
func (o GetRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The slug of the region.
func (o GetRegionsRegionOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Slug }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetSecurityGroupEgressRule struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion string `pulumi:"ipVersion"`
	// Name of the rule
	Name string `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy string `pulumi:"policy"`
	// Maximum port of the rule
	PortRangeMax int `pulumi:"portRangeMax"`
	// Minimum port of the rule
	PortRangeMin int `pulumi:"portRangeMin"`
	// Priority of the rule
	Priority int `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol string `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress string `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity string `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType string `pulumi:"remoteType"`
}

// GetSecurityGroupEgressRuleInput is an input type that accepts GetSecurityGroupEgressRuleArgs and GetSecurityGroupEgressRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupEgressRuleInput` via:
//
//	GetSecurityGroupEgressRuleArgs{...}
type GetSecurityGroupEgressRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupEgressRuleOutput() GetSecurityGroupEgressRuleOutput
	ToGetSecurityGroupEgressRuleOutputWithContext(context.Context) GetSecurityGroupEgressRuleOutput
}

type GetSecurityGroupEgressRuleArgs struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy pulumi.StringInput `pulumi:"policy"`
	// Maximum port of the rule
	PortRangeMax pulumi.IntInput `pulumi:"portRangeMax"`
	// Minimum port of the rule
	PortRangeMin pulumi.IntInput `pulumi:"portRangeMin"`
	// Priority of the rule
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress pulumi.StringInput `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity pulumi.StringInput `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType pulumi.StringInput `pulumi:"remoteType"`
}

func (GetSecurityGroupEgressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupEgressRule)(nil)).Elem()
}

func (i GetSecurityGroupEgressRuleArgs) ToGetSecurityGroupEgressRuleOutput() GetSecurityGroupEgressRuleOutput {
	return i.ToGetSecurityGroupEgressRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupEgressRuleArgs) ToGetSecurityGroupEgressRuleOutputWithContext(ctx context.Context) GetSecurityGroupEgressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupEgressRuleOutput)
}

// GetSecurityGroupEgressRuleArrayInput is an input type that accepts GetSecurityGroupEgressRuleArray and GetSecurityGroupEgressRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupEgressRuleArrayInput` via:
//
//	GetSecurityGroupEgressRuleArray{ GetSecurityGroupEgressRuleArgs{...} }
type GetSecurityGroupEgressRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupEgressRuleArrayOutput() GetSecurityGroupEgressRuleArrayOutput
	ToGetSecurityGroupEgressRuleArrayOutputWithContext(context.Context) GetSecurityGroupEgressRuleArrayOutput
}

type GetSecurityGroupEgressRuleArray []GetSecurityGroupEgressRuleInput

func (GetSecurityGroupEgressRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupEgressRule)(nil)).Elem()
}

func (i GetSecurityGroupEgressRuleArray) ToGetSecurityGroupEgressRuleArrayOutput() GetSecurityGroupEgressRuleArrayOutput {
	return i.ToGetSecurityGroupEgressRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupEgressRuleArray) ToGetSecurityGroupEgressRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupEgressRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupEgressRuleArrayOutput)
}

type GetSecurityGroupEgressRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupEgressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupEgressRule)(nil)).Elem()
}

func (o GetSecurityGroupEgressRuleOutput) ToGetSecurityGroupEgressRuleOutput() GetSecurityGroupEgressRuleOutput {
	return o
}

func (o GetSecurityGroupEgressRuleOutput) ToGetSecurityGroupEgressRuleOutputWithContext(ctx context.Context) GetSecurityGroupEgressRuleOutput {
	return o
}

// IP version of the rule (ipv4 or ipv6)
func (o GetSecurityGroupEgressRuleOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Name of the rule
func (o GetSecurityGroupEgressRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.Name }).(pulumi.StringOutput)
}

// Policy of the rule (allow or drop)
func (o GetSecurityGroupEgressRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Maximum port of the rule
func (o GetSecurityGroupEgressRuleOutput) PortRangeMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) int { return v.PortRangeMax }).(pulumi.IntOutput)
}

// Minimum port of the rule
func (o GetSecurityGroupEgressRuleOutput) PortRangeMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) int { return v.PortRangeMin }).(pulumi.IntOutput)
}

// Priority of the rule
func (o GetSecurityGroupEgressRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the rule (all, tcp, udp, icmp)
func (o GetSecurityGroupEgressRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// IP address or CIDR block that the rule applies to
func (o GetSecurityGroupEgressRuleOutput) RemoteAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.RemoteAddress }).(pulumi.StringOutput)
}

// Identity of the security group that the rule applies to
func (o GetSecurityGroupEgressRuleOutput) RemoteSecurityGroupIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.RemoteSecurityGroupIdentity }).(pulumi.StringOutput)
}

// Type of the remote address (address or securityGroup)
func (o GetSecurityGroupEgressRuleOutput) RemoteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupEgressRule) string { return v.RemoteType }).(pulumi.StringOutput)
}

type GetSecurityGroupEgressRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupEgressRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupEgressRule)(nil)).Elem()
}

func (o GetSecurityGroupEgressRuleArrayOutput) ToGetSecurityGroupEgressRuleArrayOutput() GetSecurityGroupEgressRuleArrayOutput {
	return o
}

func (o GetSecurityGroupEgressRuleArrayOutput) ToGetSecurityGroupEgressRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupEgressRuleArrayOutput {
	return o
}

func (o GetSecurityGroupEgressRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupEgressRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupEgressRule {
		return vs[0].([]GetSecurityGroupEgressRule)[vs[1].(int)]
	}).(GetSecurityGroupEgressRuleOutput)
}

type GetSecurityGroupIngressRule struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion string `pulumi:"ipVersion"`
	// Name of the rule
	Name string `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy string `pulumi:"policy"`
	// Maximum port of the rule
	PortRangeMax int `pulumi:"portRangeMax"`
	// Minimum port of the rule
	PortRangeMin int `pulumi:"portRangeMin"`
	// Priority of the rule
	Priority int `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol string `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress string `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity string `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType string `pulumi:"remoteType"`
}

// GetSecurityGroupIngressRuleInput is an input type that accepts GetSecurityGroupIngressRuleArgs and GetSecurityGroupIngressRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupIngressRuleInput` via:
//
//	GetSecurityGroupIngressRuleArgs{...}
type GetSecurityGroupIngressRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupIngressRuleOutput() GetSecurityGroupIngressRuleOutput
	ToGetSecurityGroupIngressRuleOutputWithContext(context.Context) GetSecurityGroupIngressRuleOutput
}

type GetSecurityGroupIngressRuleArgs struct {
	// IP version of the rule (ipv4 or ipv6)
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// Policy of the rule (allow or drop)
	Policy pulumi.StringInput `pulumi:"policy"`
	// Maximum port of the rule
	PortRangeMax pulumi.IntInput `pulumi:"portRangeMax"`
	// Minimum port of the rule
	PortRangeMin pulumi.IntInput `pulumi:"portRangeMin"`
	// Priority of the rule
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the rule (all, tcp, udp, icmp)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// IP address or CIDR block that the rule applies to
	RemoteAddress pulumi.StringInput `pulumi:"remoteAddress"`
	// Identity of the security group that the rule applies to
	RemoteSecurityGroupIdentity pulumi.StringInput `pulumi:"remoteSecurityGroupIdentity"`
	// Type of the remote address (address or securityGroup)
	RemoteType pulumi.StringInput `pulumi:"remoteType"`
}

func (GetSecurityGroupIngressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupIngressRule)(nil)).Elem()
}

func (i GetSecurityGroupIngressRuleArgs) ToGetSecurityGroupIngressRuleOutput() GetSecurityGroupIngressRuleOutput {
	return i.ToGetSecurityGroupIngressRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupIngressRuleArgs) ToGetSecurityGroupIngressRuleOutputWithContext(ctx context.Context) GetSecurityGroupIngressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupIngressRuleOutput)
}

// GetSecurityGroupIngressRuleArrayInput is an input type that accepts GetSecurityGroupIngressRuleArray and GetSecurityGroupIngressRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupIngressRuleArrayInput` via:
//
//	GetSecurityGroupIngressRuleArray{ GetSecurityGroupIngressRuleArgs{...} }
type GetSecurityGroupIngressRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupIngressRuleArrayOutput() GetSecurityGroupIngressRuleArrayOutput
	ToGetSecurityGroupIngressRuleArrayOutputWithContext(context.Context) GetSecurityGroupIngressRuleArrayOutput
}

type GetSecurityGroupIngressRuleArray []GetSecurityGroupIngressRuleInput

func (GetSecurityGroupIngressRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupIngressRule)(nil)).Elem()
}

func (i GetSecurityGroupIngressRuleArray) ToGetSecurityGroupIngressRuleArrayOutput() GetSecurityGroupIngressRuleArrayOutput {
	return i.ToGetSecurityGroupIngressRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupIngressRuleArray) ToGetSecurityGroupIngressRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupIngressRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupIngressRuleArrayOutput)
}

type GetSecurityGroupIngressRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupIngressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupIngressRule)(nil)).Elem()
}

func (o GetSecurityGroupIngressRuleOutput) ToGetSecurityGroupIngressRuleOutput() GetSecurityGroupIngressRuleOutput {
	return o
}

func (o GetSecurityGroupIngressRuleOutput) ToGetSecurityGroupIngressRuleOutputWithContext(ctx context.Context) GetSecurityGroupIngressRuleOutput {
	return o
}

// IP version of the rule (ipv4 or ipv6)
func (o GetSecurityGroupIngressRuleOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Name of the rule
func (o GetSecurityGroupIngressRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.Name }).(pulumi.StringOutput)
}

// Policy of the rule (allow or drop)
func (o GetSecurityGroupIngressRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Maximum port of the rule
func (o GetSecurityGroupIngressRuleOutput) PortRangeMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) int { return v.PortRangeMax }).(pulumi.IntOutput)
}

// Minimum port of the rule
func (o GetSecurityGroupIngressRuleOutput) PortRangeMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) int { return v.PortRangeMin }).(pulumi.IntOutput)
}

// Priority of the rule
func (o GetSecurityGroupIngressRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the rule (all, tcp, udp, icmp)
func (o GetSecurityGroupIngressRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// IP address or CIDR block that the rule applies to
func (o GetSecurityGroupIngressRuleOutput) RemoteAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.RemoteAddress }).(pulumi.StringOutput)
}

// Identity of the security group that the rule applies to
func (o GetSecurityGroupIngressRuleOutput) RemoteSecurityGroupIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.RemoteSecurityGroupIdentity }).(pulumi.StringOutput)
}

// Type of the remote address (address or securityGroup)
func (o GetSecurityGroupIngressRuleOutput) RemoteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupIngressRule) string { return v.RemoteType }).(pulumi.StringOutput)
}

type GetSecurityGroupIngressRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupIngressRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupIngressRule)(nil)).Elem()
}

func (o GetSecurityGroupIngressRuleArrayOutput) ToGetSecurityGroupIngressRuleArrayOutput() GetSecurityGroupIngressRuleArrayOutput {
	return o
}

func (o GetSecurityGroupIngressRuleArrayOutput) ToGetSecurityGroupIngressRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupIngressRuleArrayOutput {
	return o
}

func (o GetSecurityGroupIngressRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupIngressRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupIngressRule {
		return vs[0].([]GetSecurityGroupIngressRule)[vs[1].(int)]
	}).(GetSecurityGroupIngressRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterApiServerAclInput)(nil)).Elem(), KubernetesClusterApiServerAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterApiServerAclArrayInput)(nil)).Elem(), KubernetesClusterApiServerAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeTaintInput)(nil)).Elem(), KubernetesNodePoolNodeTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeTaintArrayInput)(nil)).Elem(), KubernetesNodePoolNodeTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupEgressRuleInput)(nil)).Elem(), SecurityGroupEgressRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupEgressRuleArrayInput)(nil)).Elem(), SecurityGroupEgressRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupIngressRuleInput)(nil)).Elem(), SecurityGroupIngressRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupIngressRuleArrayInput)(nil)).Elem(), SecurityGroupIngressRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttachmentTypeInput)(nil)).Elem(), TargetGroupAttachmentTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttachmentTypeArrayInput)(nil)).Elem(), TargetGroupAttachmentTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterApiServerAclInput)(nil)).Elem(), GetKubernetesClusterApiServerAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterApiServerAclArrayInput)(nil)).Elem(), GetKubernetesClusterApiServerAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupEgressRuleInput)(nil)).Elem(), GetSecurityGroupEgressRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupEgressRuleArrayInput)(nil)).Elem(), GetSecurityGroupEgressRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupIngressRuleInput)(nil)).Elem(), GetSecurityGroupIngressRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupIngressRuleArrayInput)(nil)).Elem(), GetSecurityGroupIngressRuleArray{})
	pulumi.RegisterOutputType(KubernetesClusterApiServerAclOutput{})
	pulumi.RegisterOutputType(KubernetesClusterApiServerAclArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeTaintOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeTaintArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupAttachmentTypeOutput{})
	pulumi.RegisterOutputType(TargetGroupAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterApiServerAclOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterApiServerAclArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupEgressRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupEgressRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupIngressRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupIngressRuleArrayOutput{})
}
