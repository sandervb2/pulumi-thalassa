// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Manages a Kubernetes cluster in the Thalassa cloud platform. This resource supports both managed clusters and hosted control plane clusters, allowing you to deploy production-ready Kubernetes environments with configurable networking, security policies, and auto-upgrade capabilities. The cluster can be customized with specific CNI plugins (Cilium or custom), network CIDRs, pod security standards, audit logging, and API server access controls.
type KubernetesCluster struct {
	pulumi.CustomResourceState

	// Annotations for the Kubernetes Cluster
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls KubernetesClusterApiServerAclArrayOutput `pulumi:"apiServerAcls"`
	// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
	AuditLogProfile pulumi.StringPtrOutput `pulumi:"auditLogProfile"`
	// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
	AutoUpgradePolicy pulumi.StringPtrOutput `pulumi:"autoUpgradePolicy"`
	// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
	ClusterType pulumi.StringPtrOutput `pulumi:"clusterType"`
	// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
	DefaultNetworkPolicy pulumi.StringPtrOutput `pulumi:"defaultNetworkPolicy"`
	// Delete protection of the Kubernetes Cluster
	DeleteProtection pulumi.BoolPtrOutput `pulumi:"deleteProtection"`
	// A human readable description about the Kubernetes Cluster
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Kubernetes API server CA certificate of the Kubernetes Cluster
	KubernetesApiServerCaCertificate pulumi.StringOutput `pulumi:"kubernetesApiServerCaCertificate"`
	// Kubernetes API server endpoint of the Kubernetes Cluster
	KubernetesApiServerEndpoint pulumi.StringOutput `pulumi:"kubernetesApiServerEndpoint"`
	// Labels for the Kubernetes Cluster
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay pulumi.IntPtrOutput `pulumi:"maintenanceDay"`
	// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
	MaintenanceStartAt pulumi.IntPtrOutput `pulumi:"maintenanceStartAt"`
	// Name of the Kubernetes Cluster
	Name pulumi.StringOutput `pulumi:"name"`
	// CNI of the Kubernetes Cluster
	NetworkingCni pulumi.StringOutput `pulumi:"networkingCni"`
	// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingPodCidr pulumi.StringPtrOutput `pulumi:"networkingPodCidr"`
	// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingServiceCidr pulumi.StringPtrOutput `pulumi:"networkingServiceCidr"`
	OrganisationId        pulumi.StringOutput    `pulumi:"organisationId"`
	// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
	PodSecurityStandardsProfile pulumi.StringPtrOutput `pulumi:"podSecurityStandardsProfile"`
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// List identities of security group that will be attached to the Kubernetes Cluster
	SecurityGroupAttachments pulumi.StringArrayOutput `pulumi:"securityGroupAttachments"`
	Slug                     pulumi.StringOutput      `pulumi:"slug"`
	// Status of the Kubernetes Cluster
	Status pulumi.StringOutput `pulumi:"status"`
	// Subnet of the Kubernetes Cluster. Required for managed clusters.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// VPC of the Kubernetes Cluster. This is automatically set when a subnet is provided.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.NetworkingCni == nil {
		return nil, errors.New("invalid value for required argument 'NetworkingCni'")
	}
	if args.OrganisationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganisationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesCluster
	err := ctx.RegisterResource("thalassa:index/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("thalassa:index/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	// Annotations for the Kubernetes Cluster
	Annotations map[string]string `pulumi:"annotations"`
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls []KubernetesClusterApiServerAcl `pulumi:"apiServerAcls"`
	// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
	AuditLogProfile *string `pulumi:"auditLogProfile"`
	// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
	AutoUpgradePolicy *string `pulumi:"autoUpgradePolicy"`
	// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
	ClusterType *string `pulumi:"clusterType"`
	// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
	ClusterVersion *string `pulumi:"clusterVersion"`
	// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
	DefaultNetworkPolicy *string `pulumi:"defaultNetworkPolicy"`
	// Delete protection of the Kubernetes Cluster
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A human readable description about the Kubernetes Cluster
	Description *string `pulumi:"description"`
	// Kubernetes API server CA certificate of the Kubernetes Cluster
	KubernetesApiServerCaCertificate *string `pulumi:"kubernetesApiServerCaCertificate"`
	// Kubernetes API server endpoint of the Kubernetes Cluster
	KubernetesApiServerEndpoint *string `pulumi:"kubernetesApiServerEndpoint"`
	// Labels for the Kubernetes Cluster
	Labels map[string]string `pulumi:"labels"`
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay *int `pulumi:"maintenanceDay"`
	// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
	MaintenanceStartAt *int `pulumi:"maintenanceStartAt"`
	// Name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// CNI of the Kubernetes Cluster
	NetworkingCni *string `pulumi:"networkingCni"`
	// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingPodCidr *string `pulumi:"networkingPodCidr"`
	// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingServiceCidr *string `pulumi:"networkingServiceCidr"`
	OrganisationId        *string `pulumi:"organisationId"`
	// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
	PodSecurityStandardsProfile *string `pulumi:"podSecurityStandardsProfile"`
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region *string `pulumi:"region"`
	// List identities of security group that will be attached to the Kubernetes Cluster
	SecurityGroupAttachments []string `pulumi:"securityGroupAttachments"`
	Slug                     *string  `pulumi:"slug"`
	// Status of the Kubernetes Cluster
	Status *string `pulumi:"status"`
	// Subnet of the Kubernetes Cluster. Required for managed clusters.
	SubnetId *string `pulumi:"subnetId"`
	// VPC of the Kubernetes Cluster. This is automatically set when a subnet is provided.
	VpcId *string `pulumi:"vpcId"`
}

type KubernetesClusterState struct {
	// Annotations for the Kubernetes Cluster
	Annotations pulumi.StringMapInput
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls KubernetesClusterApiServerAclArrayInput
	// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
	AuditLogProfile pulumi.StringPtrInput
	// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
	AutoUpgradePolicy pulumi.StringPtrInput
	// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
	ClusterType pulumi.StringPtrInput
	// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
	ClusterVersion pulumi.StringPtrInput
	// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
	DefaultNetworkPolicy pulumi.StringPtrInput
	// Delete protection of the Kubernetes Cluster
	DeleteProtection pulumi.BoolPtrInput
	// A human readable description about the Kubernetes Cluster
	Description pulumi.StringPtrInput
	// Kubernetes API server CA certificate of the Kubernetes Cluster
	KubernetesApiServerCaCertificate pulumi.StringPtrInput
	// Kubernetes API server endpoint of the Kubernetes Cluster
	KubernetesApiServerEndpoint pulumi.StringPtrInput
	// Labels for the Kubernetes Cluster
	Labels pulumi.StringMapInput
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay pulumi.IntPtrInput
	// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
	MaintenanceStartAt pulumi.IntPtrInput
	// Name of the Kubernetes Cluster
	Name pulumi.StringPtrInput
	// CNI of the Kubernetes Cluster
	NetworkingCni pulumi.StringPtrInput
	// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingPodCidr pulumi.StringPtrInput
	// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingServiceCidr pulumi.StringPtrInput
	OrganisationId        pulumi.StringPtrInput
	// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
	PodSecurityStandardsProfile pulumi.StringPtrInput
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region pulumi.StringPtrInput
	// List identities of security group that will be attached to the Kubernetes Cluster
	SecurityGroupAttachments pulumi.StringArrayInput
	Slug                     pulumi.StringPtrInput
	// Status of the Kubernetes Cluster
	Status pulumi.StringPtrInput
	// Subnet of the Kubernetes Cluster. Required for managed clusters.
	SubnetId pulumi.StringPtrInput
	// VPC of the Kubernetes Cluster. This is automatically set when a subnet is provided.
	VpcId pulumi.StringPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	// Annotations for the Kubernetes Cluster
	Annotations map[string]string `pulumi:"annotations"`
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls []KubernetesClusterApiServerAcl `pulumi:"apiServerAcls"`
	// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
	AuditLogProfile *string `pulumi:"auditLogProfile"`
	// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
	AutoUpgradePolicy *string `pulumi:"autoUpgradePolicy"`
	// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
	ClusterType *string `pulumi:"clusterType"`
	// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
	ClusterVersion string `pulumi:"clusterVersion"`
	// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
	DefaultNetworkPolicy *string `pulumi:"defaultNetworkPolicy"`
	// Delete protection of the Kubernetes Cluster
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A human readable description about the Kubernetes Cluster
	Description *string `pulumi:"description"`
	// Labels for the Kubernetes Cluster
	Labels map[string]string `pulumi:"labels"`
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay *int `pulumi:"maintenanceDay"`
	// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
	MaintenanceStartAt *int `pulumi:"maintenanceStartAt"`
	// Name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// CNI of the Kubernetes Cluster
	NetworkingCni string `pulumi:"networkingCni"`
	// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingPodCidr *string `pulumi:"networkingPodCidr"`
	// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingServiceCidr *string `pulumi:"networkingServiceCidr"`
	OrganisationId        string  `pulumi:"organisationId"`
	// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
	PodSecurityStandardsProfile *string `pulumi:"podSecurityStandardsProfile"`
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region *string `pulumi:"region"`
	// List identities of security group that will be attached to the Kubernetes Cluster
	SecurityGroupAttachments []string `pulumi:"securityGroupAttachments"`
	// Subnet of the Kubernetes Cluster. Required for managed clusters.
	SubnetId *string `pulumi:"subnetId"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	// Annotations for the Kubernetes Cluster
	Annotations pulumi.StringMapInput
	// API server ACLs for the Kubernetes Cluster
	ApiServerAcls KubernetesClusterApiServerAclArrayInput
	// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
	AuditLogProfile pulumi.StringPtrInput
	// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
	AutoUpgradePolicy pulumi.StringPtrInput
	// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
	ClusterType pulumi.StringPtrInput
	// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
	ClusterVersion pulumi.StringInput
	// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
	DefaultNetworkPolicy pulumi.StringPtrInput
	// Delete protection of the Kubernetes Cluster
	DeleteProtection pulumi.BoolPtrInput
	// A human readable description about the Kubernetes Cluster
	Description pulumi.StringPtrInput
	// Labels for the Kubernetes Cluster
	Labels pulumi.StringMapInput
	// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
	MaintenanceDay pulumi.IntPtrInput
	// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
	MaintenanceStartAt pulumi.IntPtrInput
	// Name of the Kubernetes Cluster
	Name pulumi.StringPtrInput
	// CNI of the Kubernetes Cluster
	NetworkingCni pulumi.StringInput
	// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingPodCidr pulumi.StringPtrInput
	// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
	NetworkingServiceCidr pulumi.StringPtrInput
	OrganisationId        pulumi.StringInput
	// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
	PodSecurityStandardsProfile pulumi.StringPtrInput
	// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
	Region pulumi.StringPtrInput
	// List identities of security group that will be attached to the Kubernetes Cluster
	SecurityGroupAttachments pulumi.StringArrayInput
	// Subnet of the Kubernetes Cluster. Required for managed clusters.
	SubnetId pulumi.StringPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}

type KubernetesClusterInput interface {
	pulumi.Input

	ToKubernetesClusterOutput() KubernetesClusterOutput
	ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput
}

func (*KubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (i *KubernetesCluster) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return i.ToKubernetesClusterOutputWithContext(context.Background())
}

func (i *KubernetesCluster) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOutput)
}

// KubernetesClusterArrayInput is an input type that accepts KubernetesClusterArray and KubernetesClusterArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterArrayInput` via:
//
//	KubernetesClusterArray{ KubernetesClusterArgs{...} }
type KubernetesClusterArrayInput interface {
	pulumi.Input

	ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput
	ToKubernetesClusterArrayOutputWithContext(context.Context) KubernetesClusterArrayOutput
}

type KubernetesClusterArray []KubernetesClusterInput

func (KubernetesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return i.ToKubernetesClusterArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterArrayOutput)
}

// KubernetesClusterMapInput is an input type that accepts KubernetesClusterMap and KubernetesClusterMapOutput values.
// You can construct a concrete instance of `KubernetesClusterMapInput` via:
//
//	KubernetesClusterMap{ "key": KubernetesClusterArgs{...} }
type KubernetesClusterMapInput interface {
	pulumi.Input

	ToKubernetesClusterMapOutput() KubernetesClusterMapOutput
	ToKubernetesClusterMapOutputWithContext(context.Context) KubernetesClusterMapOutput
}

type KubernetesClusterMap map[string]KubernetesClusterInput

func (KubernetesClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return i.ToKubernetesClusterMapOutputWithContext(context.Background())
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMapOutput)
}

type KubernetesClusterOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return o
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return o
}

// Annotations for the Kubernetes Cluster
func (o KubernetesClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// API server ACLs for the Kubernetes Cluster
func (o KubernetesClusterOutput) ApiServerAcls() KubernetesClusterApiServerAclArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterApiServerAclArrayOutput { return v.ApiServerAcls }).(KubernetesClusterApiServerAclArrayOutput)
}

// Audit log profile of the Kubernetes Cluster. Must be one of: none, basic, advanced. Default: none.
func (o KubernetesClusterOutput) AuditLogProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.AuditLogProfile }).(pulumi.StringPtrOutput)
}

// Auto upgrade policy of the Kubernetes Cluster. Must be one of: none, latest-version, latest-stable. Default: none.
func (o KubernetesClusterOutput) AutoUpgradePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.AutoUpgradePolicy }).(pulumi.StringPtrOutput)
}

// Cluster type of the Kubernetes Cluster. Must be one of: managed, hosted-control-plane. Default: managed.
func (o KubernetesClusterOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.ClusterType }).(pulumi.StringPtrOutput)
}

// Cluster version of the Kubernetes Cluster, can be a name, slug or identity
func (o KubernetesClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Default network policy of the Kubernetes Cluster. Must be one of: allow-all, deny-all. Default: deny-all.
func (o KubernetesClusterOutput) DefaultNetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.DefaultNetworkPolicy }).(pulumi.StringPtrOutput)
}

// Delete protection of the Kubernetes Cluster
func (o KubernetesClusterOutput) DeleteProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.DeleteProtection }).(pulumi.BoolPtrOutput)
}

// A human readable description about the Kubernetes Cluster
func (o KubernetesClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Kubernetes API server CA certificate of the Kubernetes Cluster
func (o KubernetesClusterOutput) KubernetesApiServerCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.KubernetesApiServerCaCertificate }).(pulumi.StringOutput)
}

// Kubernetes API server endpoint of the Kubernetes Cluster
func (o KubernetesClusterOutput) KubernetesApiServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.KubernetesApiServerEndpoint }).(pulumi.StringOutput)
}

// Labels for the Kubernetes Cluster
func (o KubernetesClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Day of the week when the cluster will be upgraded (0-6, where 0 is Sunday)
func (o KubernetesClusterOutput) MaintenanceDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.IntPtrOutput { return v.MaintenanceDay }).(pulumi.IntPtrOutput)
}

// Time of day when the cluster will be upgraded in minutes from midnight (0-1439)
func (o KubernetesClusterOutput) MaintenanceStartAt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.IntPtrOutput { return v.MaintenanceStartAt }).(pulumi.IntPtrOutput)
}

// Name of the Kubernetes Cluster
func (o KubernetesClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// CNI of the Kubernetes Cluster
func (o KubernetesClusterOutput) NetworkingCni() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.NetworkingCni }).(pulumi.StringOutput)
}

// Pod CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
func (o KubernetesClusterOutput) NetworkingPodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.NetworkingPodCidr }).(pulumi.StringPtrOutput)
}

// Service CIDR of the Kubernetes Cluster. Must be a valid CIDR block.
func (o KubernetesClusterOutput) NetworkingServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.NetworkingServiceCidr }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.OrganisationId }).(pulumi.StringOutput)
}

// Pod security standards profile of the Kubernetes Cluster. Must be one of: restricted, baseline, privileged. Default: baseline.
func (o KubernetesClusterOutput) PodSecurityStandardsProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.PodSecurityStandardsProfile }).(pulumi.StringPtrOutput)
}

// Region of the Kubernetes Cluster. Required for hosted-control-plane clusters.
func (o KubernetesClusterOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// List identities of security group that will be attached to the Kubernetes Cluster
func (o KubernetesClusterOutput) SecurityGroupAttachments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringArrayOutput { return v.SecurityGroupAttachments }).(pulumi.StringArrayOutput)
}

func (o KubernetesClusterOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

// Status of the Kubernetes Cluster
func (o KubernetesClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Subnet of the Kubernetes Cluster. Required for managed clusters.
func (o KubernetesClusterOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// VPC of the Kubernetes Cluster. This is automatically set when a subnet is provided.
func (o KubernetesClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type KubernetesClusterArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) Index(i pulumi.IntInput) KubernetesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].([]*KubernetesCluster)[vs[1].(int)]
	}).(KubernetesClusterOutput)
}

type KubernetesClusterMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].(map[string]*KubernetesCluster)[vs[1].(string)]
	}).(KubernetesClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInput)(nil)).Elem(), &KubernetesCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterArrayInput)(nil)).Elem(), KubernetesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMapInput)(nil)).Elem(), KubernetesClusterMap{})
	pulumi.RegisterOutputType(KubernetesClusterOutput{})
	pulumi.RegisterOutputType(KubernetesClusterArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMapOutput{})
}
