// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// A security group is a collection of rules that control the traffic to and from a virtual machine instance or other cloud resource within a VPC.
func LookupSecurityGroup(ctx *pulumi.Context, args *LookupSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupSecurityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityGroupResult
	err := ctx.Invoke("thalassa:index/getSecurityGroup:getSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupArgs struct {
	// Identity of the security group
	Identity *string `pulumi:"identity"`
	// Name of the security group
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// Identity of the VPC that the security group belongs to. Required when searching by name.
	VpcIdentity *string `pulumi:"vpcIdentity"`
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResult struct {
	// Flag that indicates if the security group allows traffic between instances in the same security group
	AllowSameGroupTraffic bool `pulumi:"allowSameGroupTraffic"`
	// Creation timestamp of the security group
	CreatedAt string `pulumi:"createdAt"`
	// Description of the security group
	Description string `pulumi:"description"`
	// List of egress rules for the security group
	EgressRules []GetSecurityGroupEgressRule `pulumi:"egressRules"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identity of the security group
	Identity *string `pulumi:"identity"`
	// List of ingress rules for the security group
	IngressRules []GetSecurityGroupIngressRule `pulumi:"ingressRules"`
	// Name of the security group
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// Status of the security group
	Status string `pulumi:"status"`
	// Last update timestamp of the security group
	UpdatedAt string `pulumi:"updatedAt"`
	// Identity of the VPC that the security group belongs to. Required when searching by name.
	VpcIdentity *string `pulumi:"vpcIdentity"`
}

func LookupSecurityGroupOutput(ctx *pulumi.Context, args LookupSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityGroupResultOutput, error) {
			args := v.(LookupSecurityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getSecurityGroup:getSecurityGroup", args, LookupSecurityGroupResultOutput{}, options).(LookupSecurityGroupResultOutput), nil
		}).(LookupSecurityGroupResultOutput)
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupOutputArgs struct {
	// Identity of the security group
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// Name of the security group
	Name           pulumi.StringPtrInput `pulumi:"name"`
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
	// Identity of the VPC that the security group belongs to. Required when searching by name.
	VpcIdentity pulumi.StringPtrInput `pulumi:"vpcIdentity"`
}

func (LookupSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupResult)(nil)).Elem()
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutput() LookupSecurityGroupResultOutput {
	return o
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutputWithContext(ctx context.Context) LookupSecurityGroupResultOutput {
	return o
}

// Flag that indicates if the security group allows traffic between instances in the same security group
func (o LookupSecurityGroupResultOutput) AllowSameGroupTraffic() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) bool { return v.AllowSameGroupTraffic }).(pulumi.BoolOutput)
}

// Creation timestamp of the security group
func (o LookupSecurityGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the security group
func (o LookupSecurityGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of egress rules for the security group
func (o LookupSecurityGroupResultOutput) EgressRules() GetSecurityGroupEgressRuleArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupEgressRule { return v.EgressRules }).(GetSecurityGroupEgressRuleArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecurityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identity of the security group
func (o LookupSecurityGroupResultOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// List of ingress rules for the security group
func (o LookupSecurityGroupResultOutput) IngressRules() GetSecurityGroupIngressRuleArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupIngressRule { return v.IngressRules }).(GetSecurityGroupIngressRuleArrayOutput)
}

// Name of the security group
func (o LookupSecurityGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupSecurityGroupResultOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

// Status of the security group
func (o LookupSecurityGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

// Last update timestamp of the security group
func (o LookupSecurityGroupResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Identity of the VPC that the security group belongs to. Required when searching by name.
func (o LookupSecurityGroupResultOutput) VpcIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.VpcIdentity }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityGroupResultOutput{})
}
