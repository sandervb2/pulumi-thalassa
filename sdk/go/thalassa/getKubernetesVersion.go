// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Get an Kubernetes version
func GetKubernetesVersion(ctx *pulumi.Context, args *GetKubernetesVersionArgs, opts ...pulumi.InvokeOption) (*GetKubernetesVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKubernetesVersionResult
	err := ctx.Invoke("thalassa:index/getKubernetesVersion:getKubernetesVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesVersion.
type GetKubernetesVersionArgs struct {
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the Kubernetes version.
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// The slug of the Kubernetes version.
	Slug *string `pulumi:"slug"`
}

// A collection of values returned by getKubernetesVersion.
type GetKubernetesVersionResult struct {
	// The annotations of the Kubernetes version.
	Annotations map[string]string `pulumi:"annotations"`
	// The cilium version.
	CiliumVersion string `pulumi:"ciliumVersion"`
	// The cloud controller manager version.
	CloudControllerManagerVersion string `pulumi:"cloudControllerManagerVersion"`
	// The CNI plugins version.
	CniPluginsVersion string `pulumi:"cniPluginsVersion"`
	// The containerd version.
	ContainerdVersion string `pulumi:"containerdVersion"`
	// The crictl version.
	CrictlVersion string `pulumi:"crictlVersion"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The istio version.
	IstioVersion string `pulumi:"istioVersion"`
	// The Kubernetes version
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// The name of the Kubernetes version.
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// The runc version.
	RuncVersion string `pulumi:"runcVersion"`
	// The slug of the Kubernetes version.
	Slug *string `pulumi:"slug"`
}

func GetKubernetesVersionOutput(ctx *pulumi.Context, args GetKubernetesVersionOutputArgs, opts ...pulumi.InvokeOption) GetKubernetesVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKubernetesVersionResultOutput, error) {
			args := v.(GetKubernetesVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getKubernetesVersion:getKubernetesVersion", args, GetKubernetesVersionResultOutput{}, options).(GetKubernetesVersionResultOutput), nil
		}).(GetKubernetesVersionResultOutput)
}

// A collection of arguments for invoking getKubernetesVersion.
type GetKubernetesVersionOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Kubernetes version.
	Name           pulumi.StringPtrInput `pulumi:"name"`
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
	// The slug of the Kubernetes version.
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (GetKubernetesVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesVersion.
type GetKubernetesVersionResultOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionResult)(nil)).Elem()
}

func (o GetKubernetesVersionResultOutput) ToGetKubernetesVersionResultOutput() GetKubernetesVersionResultOutput {
	return o
}

func (o GetKubernetesVersionResultOutput) ToGetKubernetesVersionResultOutputWithContext(ctx context.Context) GetKubernetesVersionResultOutput {
	return o
}

// The annotations of the Kubernetes version.
func (o GetKubernetesVersionResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The cilium version.
func (o GetKubernetesVersionResultOutput) CiliumVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.CiliumVersion }).(pulumi.StringOutput)
}

// The cloud controller manager version.
func (o GetKubernetesVersionResultOutput) CloudControllerManagerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.CloudControllerManagerVersion }).(pulumi.StringOutput)
}

// The CNI plugins version.
func (o GetKubernetesVersionResultOutput) CniPluginsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.CniPluginsVersion }).(pulumi.StringOutput)
}

// The containerd version.
func (o GetKubernetesVersionResultOutput) ContainerdVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.ContainerdVersion }).(pulumi.StringOutput)
}

// The crictl version.
func (o GetKubernetesVersionResultOutput) CrictlVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.CrictlVersion }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetKubernetesVersionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The istio version.
func (o GetKubernetesVersionResultOutput) IstioVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.IstioVersion }).(pulumi.StringOutput)
}

// The Kubernetes version
func (o GetKubernetesVersionResultOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// The name of the Kubernetes version.
func (o GetKubernetesVersionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetKubernetesVersionResultOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) *string { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

// The runc version.
func (o GetKubernetesVersionResultOutput) RuncVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) string { return v.RuncVersion }).(pulumi.StringOutput)
}

// The slug of the Kubernetes version.
func (o GetKubernetesVersionResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKubernetesVersionResultOutput{})
}
