// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

func LookupDbaasPgDatabase(ctx *pulumi.Context, args *LookupDbaasPgDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupDbaasPgDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDbaasPgDatabaseResult
	err := ctx.Invoke("thalassa:index/getDbaasPgDatabase:getDbaasPgDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbaasPgDatabase.
type LookupDbaasPgDatabaseArgs struct {
	// The ID of the database cluster
	DbClusterId string `pulumi:"dbClusterId"`
	// The name of the database
	Name           string  `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
}

// A collection of values returned by getDbaasPgDatabase.
type LookupDbaasPgDatabaseResult struct {
	// The connection limit of the database
	ConnectionLimit int `pulumi:"connectionLimit"`
	// The ID of the database cluster
	DbClusterId string `pulumi:"dbClusterId"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The name of the database
	Name           string  `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// The ID of the owner role
	OwnerRoleId string `pulumi:"ownerRoleId"`
}

func LookupDbaasPgDatabaseOutput(ctx *pulumi.Context, args LookupDbaasPgDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupDbaasPgDatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDbaasPgDatabaseResultOutput, error) {
			args := v.(LookupDbaasPgDatabaseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getDbaasPgDatabase:getDbaasPgDatabase", args, LookupDbaasPgDatabaseResultOutput{}, options).(LookupDbaasPgDatabaseResultOutput), nil
		}).(LookupDbaasPgDatabaseResultOutput)
}

// A collection of arguments for invoking getDbaasPgDatabase.
type LookupDbaasPgDatabaseOutputArgs struct {
	// The ID of the database cluster
	DbClusterId pulumi.StringInput `pulumi:"dbClusterId"`
	// The name of the database
	Name           pulumi.StringInput    `pulumi:"name"`
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
}

func (LookupDbaasPgDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbaasPgDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getDbaasPgDatabase.
type LookupDbaasPgDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupDbaasPgDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbaasPgDatabaseResult)(nil)).Elem()
}

func (o LookupDbaasPgDatabaseResultOutput) ToLookupDbaasPgDatabaseResultOutput() LookupDbaasPgDatabaseResultOutput {
	return o
}

func (o LookupDbaasPgDatabaseResultOutput) ToLookupDbaasPgDatabaseResultOutputWithContext(ctx context.Context) LookupDbaasPgDatabaseResultOutput {
	return o
}

// The connection limit of the database
func (o LookupDbaasPgDatabaseResultOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) int { return v.ConnectionLimit }).(pulumi.IntOutput)
}

// The ID of the database cluster
func (o LookupDbaasPgDatabaseResultOutput) DbClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) string { return v.DbClusterId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupDbaasPgDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the database
func (o LookupDbaasPgDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDbaasPgDatabaseResultOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) *string { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

// The ID of the owner role
func (o LookupDbaasPgDatabaseResultOutput) OwnerRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasPgDatabaseResult) string { return v.OwnerRoleId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbaasPgDatabaseResultOutput{})
}
