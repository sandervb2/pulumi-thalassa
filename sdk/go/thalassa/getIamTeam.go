// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package thalassa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sandervb2/pulumi-thalassa/sdk/go/thalassa/internal"
)

// Get a team
func LookupIamTeam(ctx *pulumi.Context, args *LookupIamTeamArgs, opts ...pulumi.InvokeOption) (*LookupIamTeamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIamTeamResult
	err := ctx.Invoke("thalassa:index/getIamTeam:getIamTeam", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamTeam.
type LookupIamTeamArgs struct {
	// A human readable description about the team
	Description *string `pulumi:"description"`
	// Name of the Team
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// Slug of the Team
	Slug *string `pulumi:"slug"`
}

// A collection of values returned by getIamTeam.
type LookupIamTeamResult struct {
	// Annotations for the Team
	Annotations map[string]string `pulumi:"annotations"`
	// Creation timestamp of the Team
	CreatedAt string `pulumi:"createdAt"`
	// A human readable description about the team
	Description *string `pulumi:"description"`
	// Identity of the Team
	Id string `pulumi:"id"`
	// Labels for the Team
	Labels map[string]string `pulumi:"labels"`
	// Name of the Team
	Name           *string `pulumi:"name"`
	OrganisationId *string `pulumi:"organisationId"`
	// Slug of the Team
	Slug *string `pulumi:"slug"`
	// Last update timestamp of the Team
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupIamTeamOutput(ctx *pulumi.Context, args LookupIamTeamOutputArgs, opts ...pulumi.InvokeOption) LookupIamTeamResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIamTeamResultOutput, error) {
			args := v.(LookupIamTeamArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("thalassa:index/getIamTeam:getIamTeam", args, LookupIamTeamResultOutput{}, options).(LookupIamTeamResultOutput), nil
		}).(LookupIamTeamResultOutput)
}

// A collection of arguments for invoking getIamTeam.
type LookupIamTeamOutputArgs struct {
	// A human readable description about the team
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the Team
	Name           pulumi.StringPtrInput `pulumi:"name"`
	OrganisationId pulumi.StringPtrInput `pulumi:"organisationId"`
	// Slug of the Team
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (LookupIamTeamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamTeamArgs)(nil)).Elem()
}

// A collection of values returned by getIamTeam.
type LookupIamTeamResultOutput struct{ *pulumi.OutputState }

func (LookupIamTeamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamTeamResult)(nil)).Elem()
}

func (o LookupIamTeamResultOutput) ToLookupIamTeamResultOutput() LookupIamTeamResultOutput {
	return o
}

func (o LookupIamTeamResultOutput) ToLookupIamTeamResultOutputWithContext(ctx context.Context) LookupIamTeamResultOutput {
	return o
}

// Annotations for the Team
func (o LookupIamTeamResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIamTeamResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Creation timestamp of the Team
func (o LookupIamTeamResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamTeamResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A human readable description about the team
func (o LookupIamTeamResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamTeamResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identity of the Team
func (o LookupIamTeamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamTeamResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels for the Team
func (o LookupIamTeamResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIamTeamResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Team
func (o LookupIamTeamResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamTeamResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupIamTeamResultOutput) OrganisationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamTeamResult) *string { return v.OrganisationId }).(pulumi.StringPtrOutput)
}

// Slug of the Team
func (o LookupIamTeamResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamTeamResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

// Last update timestamp of the Team
func (o LookupIamTeamResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamTeamResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIamTeamResultOutput{})
}
