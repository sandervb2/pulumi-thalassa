// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetIamTeam
    {
        /// <summary>
        /// Get a team
        /// </summary>
        public static Task<GetIamTeamResult> InvokeAsync(GetIamTeamArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamTeamResult>("thalassa:index/getIamTeam:getIamTeam", args ?? new GetIamTeamArgs(), options.WithDefaults());

        /// <summary>
        /// Get a team
        /// </summary>
        public static Output<GetIamTeamResult> Invoke(GetIamTeamInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamTeamResult>("thalassa:index/getIamTeam:getIamTeam", args ?? new GetIamTeamInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a team
        /// </summary>
        public static Output<GetIamTeamResult> Invoke(GetIamTeamInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamTeamResult>("thalassa:index/getIamTeam:getIamTeam", args ?? new GetIamTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamTeamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human readable description about the team
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Name of the Team
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        /// <summary>
        /// Slug of the Team
        /// </summary>
        [Input("slug")]
        public string? Slug { get; set; }

        public GetIamTeamArgs()
        {
        }
        public static new GetIamTeamArgs Empty => new GetIamTeamArgs();
    }

    public sealed class GetIamTeamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human readable description about the team
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the Team
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        /// <summary>
        /// Slug of the Team
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetIamTeamInvokeArgs()
        {
        }
        public static new GetIamTeamInvokeArgs Empty => new GetIamTeamInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamTeamResult
    {
        /// <summary>
        /// Annotations for the Team
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Creation timestamp of the Team
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// A human readable description about the team
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Identity of the Team
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Labels for the Team
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the Team
        /// </summary>
        public readonly string? Name;
        public readonly string? OrganisationId;
        /// <summary>
        /// Slug of the Team
        /// </summary>
        public readonly string? Slug;
        /// <summary>
        /// Last update timestamp of the Team
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetIamTeamResult(
            ImmutableDictionary<string, string> annotations,

            string createdAt,

            string? description,

            string id,

            ImmutableDictionary<string, string> labels,

            string? name,

            string? organisationId,

            string? slug,

            string updatedAt)
        {
            Annotations = annotations;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            OrganisationId = organisationId;
            Slug = slug;
            UpdatedAt = updatedAt;
        }
    }
}
