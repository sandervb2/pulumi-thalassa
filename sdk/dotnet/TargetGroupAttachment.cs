// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    /// <summary>
    /// Attach a Virtual Machine Instance to a target group
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Thalassa = Pulumi.Thalassa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a VPC for the resources
    ///     var example = new Thalassa.Vpc("example", new()
    ///     {
    ///         Name = "example-vpc",
    ///         Description = "Example VPC for target group attachment",
    ///         Region = "nl-01",
    ///         Cidrs = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///     });
    /// 
    ///     // Create a subnet for the resources
    ///     var exampleSubnet = new Thalassa.Subnet("example", new()
    ///     {
    ///         Name = "example-subnet",
    ///         Description = "Example subnet for target group attachment",
    ///         VpcId = example.Id,
    ///         Cidr = "10.0.1.0/24",
    ///     });
    /// 
    ///     // Create a target group
    ///     var exampleTargetGroup = new Thalassa.TargetGroup("example", new()
    ///     {
    ///         Name = "example-target-group",
    ///         Description = "Example target group for attachment",
    ///         VpcId = example.Id,
    ///         Protocol = "tcp",
    ///         Port = 80,
    ///     });
    /// 
    ///     // Create a virtual machine instance
    ///     var exampleVirtualMachineInstance = new Thalassa.VirtualMachineInstance("example", new()
    ///     {
    ///         Name = "example-instance",
    ///         SubnetId = exampleSubnet.Id,
    ///         MachineType = "pgp-small",
    ///         MachineImage = "ubuntu-22.04",
    ///         AvailabilityZone = "nl-01a",
    ///         RootVolumeSizeGb = 20,
    ///         RootVolumeType = "Block",
    ///     });
    /// 
    ///     // Create a target group attachment with all required attributes
    ///     var exampleTargetGroupAttachment = new Thalassa.TargetGroupAttachment("example", new()
    ///     {
    ///         TargetGroupId = exampleTargetGroup.Id,
    ///         VmiId = exampleVirtualMachineInstance.Id,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["attachmentId"] = exampleTargetGroupAttachment.Id,
    ///     };
    /// });
    /// ```
    /// </summary>
    [ThalassaResourceType("thalassa:index/targetGroupAttachment:TargetGroupAttachment")]
    public partial class TargetGroupAttachment : global::Pulumi.CustomResource
    {
        [Output("organisationId")]
        public Output<string?> OrganisationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the target group to attach to
        /// </summary>
        [Output("targetGroupId")]
        public Output<string> TargetGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Virtual Machine Instance to attach
        /// </summary>
        [Output("vmiId")]
        public Output<string> VmiId { get; private set; } = null!;


        /// <summary>
        /// Create a TargetGroupAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetGroupAttachment(string name, TargetGroupAttachmentArgs args, CustomResourceOptions? options = null)
            : base("thalassa:index/targetGroupAttachment:TargetGroupAttachment", name, args ?? new TargetGroupAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetGroupAttachment(string name, Input<string> id, TargetGroupAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("thalassa:index/targetGroupAttachment:TargetGroupAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetGroupAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetGroupAttachment Get(string name, Input<string> id, TargetGroupAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetGroupAttachment(name, id, state, options);
        }
    }

    public sealed class TargetGroupAttachmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        /// <summary>
        /// The ID of the target group to attach to
        /// </summary>
        [Input("targetGroupId", required: true)]
        public Input<string> TargetGroupId { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Machine Instance to attach
        /// </summary>
        [Input("vmiId", required: true)]
        public Input<string> VmiId { get; set; } = null!;

        public TargetGroupAttachmentArgs()
        {
        }
        public static new TargetGroupAttachmentArgs Empty => new TargetGroupAttachmentArgs();
    }

    public sealed class TargetGroupAttachmentState : global::Pulumi.ResourceArgs
    {
        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        /// <summary>
        /// The ID of the target group to attach to
        /// </summary>
        [Input("targetGroupId")]
        public Input<string>? TargetGroupId { get; set; }

        /// <summary>
        /// The ID of the Virtual Machine Instance to attach
        /// </summary>
        [Input("vmiId")]
        public Input<string>? VmiId { get; set; }

        public TargetGroupAttachmentState()
        {
        }
        public static new TargetGroupAttachmentState Empty => new TargetGroupAttachmentState();
    }
}
