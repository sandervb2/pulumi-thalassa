// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetMachineType
    {
        /// <summary>
        /// Get an machine type
        /// </summary>
        public static Task<GetMachineTypeResult> InvokeAsync(GetMachineTypeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineTypeResult>("thalassa:index/getMachineType:getMachineType", args ?? new GetMachineTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an machine type
        /// </summary>
        public static Output<GetMachineTypeResult> Invoke(GetMachineTypeInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineTypeResult>("thalassa:index/getMachineType:getMachineType", args ?? new GetMachineTypeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an machine type
        /// </summary>
        public static Output<GetMachineTypeResult> Invoke(GetMachineTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineTypeResult>("thalassa:index/getMachineType:getMachineType", args ?? new GetMachineTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineTypeArgs : global::Pulumi.InvokeArgs
    {
        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        public GetMachineTypeArgs()
        {
        }
        public static new GetMachineTypeArgs Empty => new GetMachineTypeArgs();
    }

    public sealed class GetMachineTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetMachineTypeInvokeArgs()
        {
        }
        public static new GetMachineTypeInvokeArgs Empty => new GetMachineTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineTypeResult
    {
        public readonly int CpuCores;
        public readonly string Description;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? OrganisationId;
        public readonly int RamMb;
        public readonly string? Slug;

        [OutputConstructor]
        private GetMachineTypeResult(
            int cpuCores,

            string description,

            string id,

            string name,

            string? organisationId,

            int ramMb,

            string? slug)
        {
            CpuCores = cpuCores;
            Description = description;
            Id = id;
            Name = name;
            OrganisationId = organisationId;
            RamMb = ramMb;
            Slug = slug;
        }
    }
}
