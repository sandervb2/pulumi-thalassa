// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetObjectstorageBucket
    {
        /// <summary>
        /// Get an object storage bucket
        /// </summary>
        public static Task<GetObjectstorageBucketResult> InvokeAsync(GetObjectstorageBucketArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectstorageBucketResult>("thalassa:index/getObjectstorageBucket:getObjectstorageBucket", args ?? new GetObjectstorageBucketArgs(), options.WithDefaults());

        /// <summary>
        /// Get an object storage bucket
        /// </summary>
        public static Output<GetObjectstorageBucketResult> Invoke(GetObjectstorageBucketInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectstorageBucketResult>("thalassa:index/getObjectstorageBucket:getObjectstorageBucket", args ?? new GetObjectstorageBucketInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an object storage bucket
        /// </summary>
        public static Output<GetObjectstorageBucketResult> Invoke(GetObjectstorageBucketInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectstorageBucketResult>("thalassa:index/getObjectstorageBucket:getObjectstorageBucket", args ?? new GetObjectstorageBucketInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectstorageBucketArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        /// <summary>
        /// Region of the bucket
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetObjectstorageBucketArgs()
        {
        }
        public static new GetObjectstorageBucketArgs Empty => new GetObjectstorageBucketArgs();
    }

    public sealed class GetObjectstorageBucketInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the bucket
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        /// <summary>
        /// Region of the bucket
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetObjectstorageBucketInvokeArgs()
        {
        }
        public static new GetObjectstorageBucketInvokeArgs Empty => new GetObjectstorageBucketInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectstorageBucketResult
    {
        /// <summary>
        /// The endpoint URL for the bucket
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Identity of the bucket
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the bucket
        /// </summary>
        public readonly string Name;
        public readonly string? OrganisationId;
        /// <summary>
        /// The bucket policy as a JSON string
        /// </summary>
        public readonly string Policy;
        /// <summary>
        /// Whether the bucket is publicly accessible
        /// </summary>
        public readonly bool Public;
        /// <summary>
        /// Region of the bucket
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Status of the bucket
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetObjectstorageBucketResult(
            string endpoint,

            string id,

            string name,

            string? organisationId,

            string policy,

            bool @public,

            string? region,

            string status)
        {
            Endpoint = endpoint;
            Id = id;
            Name = name;
            OrganisationId = organisationId;
            Policy = policy;
            Public = @public;
            Region = region;
            Status = status;
        }
    }
}
