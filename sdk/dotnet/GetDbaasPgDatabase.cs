// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetDbaasPgDatabase
    {
        public static Task<GetDbaasPgDatabaseResult> InvokeAsync(GetDbaasPgDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbaasPgDatabaseResult>("thalassa:index/getDbaasPgDatabase:getDbaasPgDatabase", args ?? new GetDbaasPgDatabaseArgs(), options.WithDefaults());

        public static Output<GetDbaasPgDatabaseResult> Invoke(GetDbaasPgDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbaasPgDatabaseResult>("thalassa:index/getDbaasPgDatabase:getDbaasPgDatabase", args ?? new GetDbaasPgDatabaseInvokeArgs(), options.WithDefaults());

        public static Output<GetDbaasPgDatabaseResult> Invoke(GetDbaasPgDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbaasPgDatabaseResult>("thalassa:index/getDbaasPgDatabase:getDbaasPgDatabase", args ?? new GetDbaasPgDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbaasPgDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database cluster
        /// </summary>
        [Input("dbClusterId", required: true)]
        public string DbClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the database
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        public GetDbaasPgDatabaseArgs()
        {
        }
        public static new GetDbaasPgDatabaseArgs Empty => new GetDbaasPgDatabaseArgs();
    }

    public sealed class GetDbaasPgDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database cluster
        /// </summary>
        [Input("dbClusterId", required: true)]
        public Input<string> DbClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the database
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        public GetDbaasPgDatabaseInvokeArgs()
        {
        }
        public static new GetDbaasPgDatabaseInvokeArgs Empty => new GetDbaasPgDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbaasPgDatabaseResult
    {
        /// <summary>
        /// The connection limit of the database
        /// </summary>
        public readonly int ConnectionLimit;
        /// <summary>
        /// The ID of the database cluster
        /// </summary>
        public readonly string DbClusterId;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the database
        /// </summary>
        public readonly string Name;
        public readonly string? OrganisationId;
        /// <summary>
        /// The ID of the owner role
        /// </summary>
        public readonly string OwnerRoleId;

        [OutputConstructor]
        private GetDbaasPgDatabaseResult(
            int connectionLimit,

            string dbClusterId,

            string id,

            string name,

            string? organisationId,

            string ownerRoleId)
        {
            ConnectionLimit = connectionLimit;
            DbClusterId = dbClusterId;
            Id = id;
            Name = name;
            OrganisationId = organisationId;
            OwnerRoleId = ownerRoleId;
        }
    }
}
