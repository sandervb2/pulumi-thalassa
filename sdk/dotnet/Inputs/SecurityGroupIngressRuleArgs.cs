// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa.Inputs
{

    public sealed class SecurityGroupIngressRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP version of the rule (ipv4 or ipv6)
        /// </summary>
        [Input("ipVersion", required: true)]
        public Input<string> IpVersion { get; set; } = null!;

        /// <summary>
        /// Name of the rule
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Policy of the rule (allow or drop)
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        /// <summary>
        /// Maximum port of the rule. Must be greater than 0 and less than 65535.
        /// </summary>
        [Input("portRangeMax")]
        public Input<int>? PortRangeMax { get; set; }

        /// <summary>
        /// Minimum port of the rule. Must be greater than 0 and less than 65535.
        /// </summary>
        [Input("portRangeMin")]
        public Input<int>? PortRangeMin { get; set; }

        /// <summary>
        /// Priority of the rule. Must be greater than 0 and less than 200.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Protocol of the rule (all, tcp, udp, icmp)
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// IP address or CIDR block that the rule applies to
        /// </summary>
        [Input("remoteAddress")]
        public Input<string>? RemoteAddress { get; set; }

        /// <summary>
        /// Identity of the security group that the rule applies to
        /// </summary>
        [Input("remoteSecurityGroupIdentity")]
        public Input<string>? RemoteSecurityGroupIdentity { get; set; }

        /// <summary>
        /// Type of the remote address (address or securityGroup)
        /// </summary>
        [Input("remoteType", required: true)]
        public Input<string> RemoteType { get; set; } = null!;

        public SecurityGroupIngressRuleArgs()
        {
        }
        public static new SecurityGroupIngressRuleArgs Empty => new SecurityGroupIngressRuleArgs();
    }
}
