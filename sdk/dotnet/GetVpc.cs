// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetVpc
    {
        /// <summary>
        /// Get an vpc
        /// </summary>
        public static Task<GetVpcResult> InvokeAsync(GetVpcArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcResult>("thalassa:index/getVpc:getVpc", args ?? new GetVpcArgs(), options.WithDefaults());

        /// <summary>
        /// Get an vpc
        /// </summary>
        public static Output<GetVpcResult> Invoke(GetVpcInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcResult>("thalassa:index/getVpc:getVpc", args ?? new GetVpcInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an vpc
        /// </summary>
        public static Output<GetVpcResult> Invoke(GetVpcInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcResult>("thalassa:index/getVpc:getVpc", args ?? new GetVpcInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human readable description about the vpc
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Name of the Vpc
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        /// <summary>
        /// Region of the Vpc. Provide the identity of the region. Can only be set on creation.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Slug of the Vpc
        /// </summary>
        [Input("slug")]
        public string? Slug { get; set; }

        public GetVpcArgs()
        {
        }
        public static new GetVpcArgs Empty => new GetVpcArgs();
    }

    public sealed class GetVpcInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human readable description about the vpc
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the Vpc
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        /// <summary>
        /// Region of the Vpc. Provide the identity of the region. Can only be set on creation.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Slug of the Vpc
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetVpcInvokeArgs()
        {
        }
        public static new GetVpcInvokeArgs Empty => new GetVpcInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcResult
    {
        /// <summary>
        /// Annotations for the Vpc
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// List of CIDRs for the Vpc
        /// </summary>
        public readonly ImmutableArray<string> Cidrs;
        /// <summary>
        /// A human readable description about the vpc
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Identity of the Vpc
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Labels for the Vpc
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the Vpc
        /// </summary>
        public readonly string? Name;
        public readonly string? OrganisationId;
        /// <summary>
        /// Region of the Vpc. Provide the identity of the region. Can only be set on creation.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Slug of the Vpc
        /// </summary>
        public readonly string? Slug;
        /// <summary>
        /// Status of the Vpc
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetVpcResult(
            ImmutableDictionary<string, string> annotations,

            ImmutableArray<string> cidrs,

            string? description,

            string id,

            ImmutableDictionary<string, string> labels,

            string? name,

            string? organisationId,

            string? region,

            string? slug,

            string status)
        {
            Annotations = annotations;
            Cidrs = cidrs;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            OrganisationId = organisationId;
            Region = region;
            Slug = slug;
            Status = status;
        }
    }
}
