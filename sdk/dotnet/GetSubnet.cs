// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    public static class GetSubnet
    {
        /// <summary>
        /// Get a subnet by name
        /// </summary>
        public static Task<GetSubnetResult> InvokeAsync(GetSubnetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubnetResult>("thalassa:index/getSubnet:getSubnet", args ?? new GetSubnetArgs(), options.WithDefaults());

        /// <summary>
        /// Get a subnet by name
        /// </summary>
        public static Output<GetSubnetResult> Invoke(GetSubnetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetResult>("thalassa:index/getSubnet:getSubnet", args ?? new GetSubnetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a subnet by name
        /// </summary>
        public static Output<GetSubnetResult> Invoke(GetSubnetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetResult>("thalassa:index/getSubnet:getSubnet", args ?? new GetSubnetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("organisationId")]
        public string? OrganisationId { get; set; }

        [Input("slug")]
        public string? Slug { get; set; }

        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetSubnetArgs()
        {
        }
        public static new GetSubnetArgs Empty => new GetSubnetArgs();
    }

    public sealed class GetSubnetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("organisationId")]
        public Input<string>? OrganisationId { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetSubnetInvokeArgs()
        {
        }
        public static new GetSubnetInvokeArgs Empty => new GetSubnetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetResult
    {
        public readonly string Cidr;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? OrganisationId;
        public readonly string Slug;
        public readonly string VpcId;

        [OutputConstructor]
        private GetSubnetResult(
            string cidr,

            string id,

            string name,

            string? organisationId,

            string slug,

            string vpcId)
        {
            Cidr = cidr;
            Id = id;
            Name = name;
            OrganisationId = organisationId;
            Slug = slug;
            VpcId = vpcId;
        }
    }
}
