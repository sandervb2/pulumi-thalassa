// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Thalassa
{
    /// <summary>
    /// Manage an organisation role in Thalassa Cloud
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Thalassa = Pulumi.Thalassa;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an organisation role
    ///     var example = new Thalassa.IamRole("example", new()
    ///     {
    ///         Name = "example-role",
    ///         Description = "An example organisation role for demonstration purposes",
    ///         Labels = 
    ///         {
    ///             { "environment", "development" },
    ///             { "project", "example" },
    ///         },
    ///         Annotations = 
    ///         {
    ///             { "example.com/created-by", "terraform" },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["roleId"] = example.Id,
    ///         ["roleName"] = example.Name,
    ///         ["roleSlug"] = example.Slug,
    ///         ["roleDescription"] = example.Description,
    ///     };
    /// });
    /// ```
    /// </summary>
    [ThalassaResourceType("thalassa:index/iamRole:IamRole")]
    public partial class IamRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Annotations for the organisation role
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp of the organisation role
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the organisation role
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Labels for the organisation role
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the organisation role
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether the role is read-only and cannot be modified.
        /// </summary>
        [Output("roleIsReadOnly")]
        public Output<bool> RoleIsReadOnly { get; private set; } = null!;

        /// <summary>
        /// Slug of the organisation role
        /// </summary>
        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        /// <summary>
        /// Whether the role is a system role
        /// </summary>
        [Output("system")]
        public Output<bool> System { get; private set; } = null!;

        /// <summary>
        /// Last update timestamp of the organisation role
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a IamRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamRole(string name, IamRoleArgs? args = null, CustomResourceOptions? options = null)
            : base("thalassa:index/iamRole:IamRole", name, args ?? new IamRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamRole(string name, Input<string> id, IamRoleState? state = null, CustomResourceOptions? options = null)
            : base("thalassa:index/iamRole:IamRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/sandervb2/pulumi-thalassa",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamRole Get(string name, Input<string> id, IamRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new IamRole(name, id, state, options);
        }
    }

    public sealed class IamRoleArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations for the organisation role
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Description of the organisation role
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for the organisation role
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the organisation role
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IamRoleArgs()
        {
        }
        public static new IamRoleArgs Empty => new IamRoleArgs();
    }

    public sealed class IamRoleState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations for the organisation role
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Creation timestamp of the organisation role
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Description of the organisation role
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for the organisation role
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the organisation role
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the role is read-only and cannot be modified.
        /// </summary>
        [Input("roleIsReadOnly")]
        public Input<bool>? RoleIsReadOnly { get; set; }

        /// <summary>
        /// Slug of the organisation role
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        /// <summary>
        /// Whether the role is a system role
        /// </summary>
        [Input("system")]
        public Input<bool>? System { get; set; }

        /// <summary>
        /// Last update timestamp of the organisation role
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public IamRoleState()
        {
        }
        public static new IamRoleState Empty => new IamRoleState();
    }
}
