// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get an Kubernetes version
 */
export function getKubernetesVersion(args?: GetKubernetesVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesVersionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getKubernetesVersion:getKubernetesVersion", {
        "id": args.id,
        "name": args.name,
        "organisationId": args.organisationId,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesVersion.
 */
export interface GetKubernetesVersionArgs {
    /**
     * The ID of this resource.
     */
    id?: string;
    /**
     * The name of the Kubernetes version.
     */
    name?: string;
    organisationId?: string;
    /**
     * The slug of the Kubernetes version.
     */
    slug?: string;
}

/**
 * A collection of values returned by getKubernetesVersion.
 */
export interface GetKubernetesVersionResult {
    /**
     * The annotations of the Kubernetes version.
     */
    readonly annotations: {[key: string]: string};
    /**
     * The cilium version.
     */
    readonly ciliumVersion: string;
    /**
     * The cloud controller manager version.
     */
    readonly cloudControllerManagerVersion: string;
    /**
     * The CNI plugins version.
     */
    readonly cniPluginsVersion: string;
    /**
     * The containerd version.
     */
    readonly containerdVersion: string;
    /**
     * The crictl version.
     */
    readonly crictlVersion: string;
    /**
     * The ID of this resource.
     */
    readonly id?: string;
    /**
     * The istio version.
     */
    readonly istioVersion: string;
    /**
     * The Kubernetes version
     */
    readonly kubernetesVersion: string;
    /**
     * The name of the Kubernetes version.
     */
    readonly name?: string;
    readonly organisationId?: string;
    /**
     * The runc version.
     */
    readonly runcVersion: string;
    /**
     * The slug of the Kubernetes version.
     */
    readonly slug?: string;
}
/**
 * Get an Kubernetes version
 */
export function getKubernetesVersionOutput(args?: GetKubernetesVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKubernetesVersionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getKubernetesVersion:getKubernetesVersion", {
        "id": args.id,
        "name": args.name,
        "organisationId": args.organisationId,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesVersion.
 */
export interface GetKubernetesVersionOutputArgs {
    /**
     * The ID of this resource.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the Kubernetes version.
     */
    name?: pulumi.Input<string>;
    organisationId?: pulumi.Input<string>;
    /**
     * The slug of the Kubernetes version.
     */
    slug?: pulumi.Input<string>;
}
