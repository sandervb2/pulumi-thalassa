// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a list of regions
 */
export function getRegions(args?: GetRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getRegions:getRegions", {
        "organisationId": args.organisationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsArgs {
    /**
     * The organisation to get the regions for. If not provided, the current organisation will be used.
     */
    organisationId?: string;
}

/**
 * A collection of values returned by getRegions.
 */
export interface GetRegionsResult {
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * The organisation to get the regions for. If not provided, the current organisation will be used.
     */
    readonly organisationId?: string;
    readonly regions: outputs.GetRegionsRegion[];
}
/**
 * Get a list of regions
 */
export function getRegionsOutput(args?: GetRegionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getRegions:getRegions", {
        "organisationId": args.organisationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsOutputArgs {
    /**
     * The organisation to get the regions for. If not provided, the current organisation will be used.
     */
    organisationId?: pulumi.Input<string>;
}
