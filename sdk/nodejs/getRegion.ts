// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get an region
 */
export function getRegion(args?: GetRegionArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getRegion:getRegion", {
        "organisationId": args.organisationId,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegion.
 */
export interface GetRegionArgs {
    organisationId?: string;
    slug?: string;
}

/**
 * A collection of values returned by getRegion.
 */
export interface GetRegionResult {
    readonly annotations: {[key: string]: string};
    readonly description: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly organisationId: string;
    readonly slug?: string;
}
/**
 * Get an region
 */
export function getRegionOutput(args?: GetRegionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getRegion:getRegion", {
        "organisationId": args.organisationId,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegion.
 */
export interface GetRegionOutputArgs {
    organisationId?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}
