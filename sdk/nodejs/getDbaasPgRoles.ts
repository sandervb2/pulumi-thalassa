// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDbaasPgRoles(args: GetDbaasPgRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetDbaasPgRolesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getDbaasPgRoles:getDbaasPgRoles", {
        "dbClusterId": args.dbClusterId,
        "name": args.name,
        "organisationId": args.organisationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbaasPgRoles.
 */
export interface GetDbaasPgRolesArgs {
    /**
     * The ID of the database cluster
     */
    dbClusterId: string;
    /**
     * The name of the role
     */
    name: string;
    organisationId?: string;
}

/**
 * A collection of values returned by getDbaasPgRoles.
 */
export interface GetDbaasPgRolesResult {
    /**
     * The connection limit of the role
     */
    readonly connectionLimit: number;
    /**
     * Whether the role can create databases
     */
    readonly createDb: boolean;
    /**
     * Whether the role can create roles
     */
    readonly createRole: boolean;
    /**
     * The ID of the database cluster
     */
    readonly dbClusterId: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * Whether the role can login
     */
    readonly login: boolean;
    /**
     * The name of the role
     */
    readonly name: string;
    readonly organisationId?: string;
}
export function getDbaasPgRolesOutput(args: GetDbaasPgRolesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDbaasPgRolesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getDbaasPgRoles:getDbaasPgRoles", {
        "dbClusterId": args.dbClusterId,
        "name": args.name,
        "organisationId": args.organisationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbaasPgRoles.
 */
export interface GetDbaasPgRolesOutputArgs {
    /**
     * The ID of the database cluster
     */
    dbClusterId: pulumi.Input<string>;
    /**
     * The name of the role
     */
    name: pulumi.Input<string>;
    organisationId?: pulumi.Input<string>;
}
