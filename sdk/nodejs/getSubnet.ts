// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get a subnet by name
 */
export function getSubnet(args: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getSubnet:getSubnet", {
        "name": args.name,
        "organisationId": args.organisationId,
        "slug": args.slug,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    name: string;
    organisationId?: string;
    slug?: string;
    vpcId: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly cidr: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly name: string;
    readonly organisationId?: string;
    readonly slug: string;
    readonly vpcId: string;
}
/**
 * Get a subnet by name
 */
export function getSubnetOutput(args: GetSubnetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubnetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getSubnet:getSubnet", {
        "name": args.name,
        "organisationId": args.organisationId,
        "slug": args.slug,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    name: pulumi.Input<string>;
    organisationId?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
