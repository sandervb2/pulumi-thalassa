// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get an vpc
 */
export function getVpc(args?: GetVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getVpc:getVpc", {
        "description": args.description,
        "name": args.name,
        "organisationId": args.organisationId,
        "region": args.region,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcArgs {
    /**
     * A human readable description about the vpc
     */
    description?: string;
    /**
     * Name of the Vpc
     */
    name?: string;
    organisationId?: string;
    /**
     * Region of the Vpc. Provide the identity of the region. Can only be set on creation.
     */
    region?: string;
    /**
     * Slug of the Vpc
     */
    slug?: string;
}

/**
 * A collection of values returned by getVpc.
 */
export interface GetVpcResult {
    /**
     * Annotations for the Vpc
     */
    readonly annotations: {[key: string]: string};
    /**
     * List of CIDRs for the Vpc
     */
    readonly cidrs: string[];
    /**
     * A human readable description about the vpc
     */
    readonly description?: string;
    /**
     * Identity of the Vpc
     */
    readonly id: string;
    /**
     * Labels for the Vpc
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the Vpc
     */
    readonly name?: string;
    readonly organisationId?: string;
    /**
     * Region of the Vpc. Provide the identity of the region. Can only be set on creation.
     */
    readonly region?: string;
    /**
     * Slug of the Vpc
     */
    readonly slug?: string;
    /**
     * Status of the Vpc
     */
    readonly status: string;
}
/**
 * Get an vpc
 */
export function getVpcOutput(args?: GetVpcOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getVpc:getVpc", {
        "description": args.description,
        "name": args.name,
        "organisationId": args.organisationId,
        "region": args.region,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcOutputArgs {
    /**
     * A human readable description about the vpc
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Vpc
     */
    name?: pulumi.Input<string>;
    organisationId?: pulumi.Input<string>;
    /**
     * Region of the Vpc. Provide the identity of the region. Can only be set on creation.
     */
    region?: pulumi.Input<string>;
    /**
     * Slug of the Vpc
     */
    slug?: pulumi.Input<string>;
}
