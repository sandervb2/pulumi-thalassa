// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get an organisation
 */
export function getOrganisation(args?: GetOrganisationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganisationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thalassa:index/getOrganisation:getOrganisation", {
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganisation.
 */
export interface GetOrganisationArgs {
    slug?: string;
}

/**
 * A collection of values returned by getOrganisation.
 */
export interface GetOrganisationResult {
    readonly annotations: {[key: string]: string};
    readonly description: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly slug?: string;
}
/**
 * Get an organisation
 */
export function getOrganisationOutput(args?: GetOrganisationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganisationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("thalassa:index/getOrganisation:getOrganisation", {
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganisation.
 */
export interface GetOrganisationOutputArgs {
    slug?: pulumi.Input<string>;
}
