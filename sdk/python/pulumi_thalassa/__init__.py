# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
from . import _utilities
import typing
# Export this package's modules as members:
from .block_volume import *
from .block_volume_attachment import *
from .cloud_init_template import *
from .dbaas_db_backupschedule import *
from .dbaas_db_cluster import *
from .dbaas_pg_database import *
from .dbaas_pg_roles import *
from .get_dbaas_db_backupschedule import *
from .get_dbaas_db_cluster import *
from .get_dbaas_pg_database import *
from .get_dbaas_pg_roles import *
from .get_iam_role import *
from .get_iam_team import *
from .get_kubernetes_cluster import *
from .get_kubernetes_version import *
from .get_machine_image import *
from .get_machine_type import *
from .get_objectstorage_bucket import *
from .get_organisation import *
from .get_region import *
from .get_regions import *
from .get_security_group import *
from .get_subnet import *
from .get_volume_type import *
from .get_vpc import *
from .iam_role import *
from .iam_team import *
from .kubernetes_cluster import *
from .kubernetes_node_pool import *
from .loadbalancer import *
from .loadbalancer_listener import *
from .natgateway import *
from .objectstorage_bucket import *
from .provider import *
from .route_table import *
from .route_table_route import *
from .security_group import *
from .subnet import *
from .target_group import *
from .target_group_attachment import *
from .virtual_machine_instance import *
from .vpc import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_thalassa.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_thalassa.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "thalassa",
  "mod": "index/blockVolume",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/blockVolume:BlockVolume": "BlockVolume"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/blockVolumeAttachment",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/blockVolumeAttachment:BlockVolumeAttachment": "BlockVolumeAttachment"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/cloudInitTemplate",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/cloudInitTemplate:CloudInitTemplate": "CloudInitTemplate"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/dbaasDbBackupschedule",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/dbaasDbBackupschedule:DbaasDbBackupschedule": "DbaasDbBackupschedule"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/dbaasDbCluster",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/dbaasDbCluster:DbaasDbCluster": "DbaasDbCluster"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/dbaasPgDatabase",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/dbaasPgDatabase:DbaasPgDatabase": "DbaasPgDatabase"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/dbaasPgRoles",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/dbaasPgRoles:DbaasPgRoles": "DbaasPgRoles"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/iamRole",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/iamRole:IamRole": "IamRole"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/iamTeam",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/iamTeam:IamTeam": "IamTeam"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/kubernetesCluster",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/kubernetesCluster:KubernetesCluster": "KubernetesCluster"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/kubernetesNodePool",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/kubernetesNodePool:KubernetesNodePool": "KubernetesNodePool"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/loadbalancer",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/loadbalancer:Loadbalancer": "Loadbalancer"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/loadbalancerListener",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/loadbalancerListener:LoadbalancerListener": "LoadbalancerListener"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/natgateway",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/natgateway:Natgateway": "Natgateway"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/objectstorageBucket",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/objectstorageBucket:ObjectstorageBucket": "ObjectstorageBucket"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/routeTable",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/routeTable:RouteTable": "RouteTable"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/routeTableRoute",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/routeTableRoute:RouteTableRoute": "RouteTableRoute"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/securityGroup",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/securityGroup:SecurityGroup": "SecurityGroup"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/subnet",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/subnet:Subnet": "Subnet"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/targetGroup",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/targetGroup:TargetGroup": "TargetGroup"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/targetGroupAttachment",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/targetGroupAttachment:TargetGroupAttachment": "TargetGroupAttachment"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/virtualMachineInstance",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/virtualMachineInstance:VirtualMachineInstance": "VirtualMachineInstance"
  }
 },
 {
  "pkg": "thalassa",
  "mod": "index/vpc",
  "fqn": "pulumi_thalassa",
  "classes": {
   "thalassa:index/vpc:Vpc": "Vpc"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "thalassa",
  "token": "pulumi:providers:thalassa",
  "fqn": "pulumi_thalassa",
  "class": "Provider"
 }
]
"""
)
