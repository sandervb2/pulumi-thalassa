name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  id-token: write

env:
  PROVIDER: thalassa
  GO111MODULE: "on"
  PROVIDER_VERSION: ${{ github.ref_name }}

jobs:
  publish_provider:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"
          cache-dependency-path: "**/*.sum"
          
      - name: Set PROVIDER_VERSION from tag
        run: echo "PROVIDER_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Build provider distributions
        run: |
          make clean
          make tfgen
          make provider_dist PROVIDER_VERSION="$PROVIDER_VERSION"

      - name: Upload provider assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            bin/pulumi-resource-thalassa-v${{ env.PROVIDER_VERSION }}-*.tar.gz
            bin/SHA256SUMS.txt
          overwrite: true
  
  publish_sdk:
    name: Publish SDK to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
    
      - name: Set PROVIDER_VERSION from tag (strip leading v)
        run: echo "PROVIDER_VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Align SDK package.json version
        working-directory: sdk/nodejs
        run: npm version "$PROVIDER_VERSION" --no-git-tag-version

      - name: Build NodeJS SDK
        run: |
          make generate_nodejs
          make build_nodejs PROVIDER_VERSION="$PROVIDER_VERSION"
          
      - name: Preview npm contents
        working-directory: sdk/nodejs/bin
        run: npm pack --dry-run

      - name: Publish to npm (OIDC provenance, no token)
        working-directory: sdk/nodejs/bin
        env:
          NPM_CONFIG_PROVENANCE: "true"
        run: |
          # First publish of a scoped package must be public
          npm publish --access public --provenance
