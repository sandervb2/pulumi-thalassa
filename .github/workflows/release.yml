name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  id-token: write

env:
  PROVIDER: thalassa
  GO111MODULE: "on"

jobs:
  publish_provider:
    name: Publish Provider to GitHub Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"
          cache-dependency-path: "**/*.sum"

      - name: Set PROVIDER_VERSION from tag
        run: echo "PROVIDER_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Build provider distributions
        run: |
          make clean
          make tfgen
          make provider_dist PROVIDER_VERSION="$PROVIDER_VERSION"

      - name: Generate checksums
        run: |
          cd bin
          sha256sum pulumi-resource-thalassa-v${PROVIDER_VERSION}-*.tar.gz > SHA256SUMS.txt
          cat SHA256SUMS.txt

      - name: Upload provider assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            bin/pulumi-resource-thalassa-v${{ env.PROVIDER_VERSION }}-*.tar.gz
            bin/SHA256SUMS.txt
          overwrite_files: true

  publish_sdk:
    name: Publish SDK to npm
    needs: publish_provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      # Upgrade npm to the required version for Trusted Publishing
      - name: Upgrade npm to >=11.5.1
        run: |
          npm i -g npm@^11.5.1
          echo "npm version: $(npm -v)"

      - name: Set PROVIDER_VERSION from tag (strip leading v)
        run: echo "PROVIDER_VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Align SDK package.json version
        working-directory: sdk/nodejs
        run: npm version "$PROVIDER_VERSION" --no-git-tag-version

      - name: Build NodeJS SDK
        run: |
          make generate_nodejs
          make build_nodejs PROVIDER_VERSION="$PROVIDER_VERSION"

      - name: Publish to npm
        working-directory: sdk/nodejs/bin
        env:
          NPM_CONFIG_PROVENANCE: "true"
        run: |
          npm publish --access public

  publish_pypi:
    name: Publish SDK to PyPI
    needs: publish_provider
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set SCM pretend version
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_PULUMI_THALASSA=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Generate Python SDK
        run: make generate_python

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build Python
        working-directory: sdk/python
        run: |
          python -m pip install --upgrade pip build
          python -m build --outdir dist
          ls -l dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: sdk/python/dist
